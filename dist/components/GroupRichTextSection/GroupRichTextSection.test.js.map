{"version":3,"sources":["../../../src/components/GroupRichTextSection/GroupRichTextSection.test.tsx"],"names":["cleanup","React","mountWithTheme","Typo","GroupRichTextSection","mockAnchorId","xdescribe","afterEach","it","todo","groupText","textField","type","children","text","title","sectionColor","renderCardSection","heading","find","last","expect","toBe","paragraph"],"mappings":";;;AAAA,SAAQA,OAAR,QAAsB,wBAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,cAAR,EAAwBC,IAAxB,QAAmC,yBAAnC;AACA,SAAQC,oBAAR;AAGA,IAAMC,YAAY,GAAG,mBAArB;AAEAC,SAAS,CAAC,yCAAD,EAA4C,YAAM;AACzDC,EAAAA,SAAS,CAACP,OAAD,CAAT;AAEAQ,EAAAA,EAAE,CAACC,IAAH,CAAQ,qCAAR,EAA+C,YAAM;AACnD,QAAMC,SAAmC,GAAG,CAC1C;AACEC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,QAAQ,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD;AAFZ,OADS,EAKT;AACEF,QAAAA,IAAI,EAAE,WADR;AAEEC,QAAAA,QAAQ,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD;AAFZ,OALS,CADb;AAWEC,MAAAA,KAAK,EAAE,CACL;AACEH,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,QAAQ,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD;AAFZ,OADK,EAKL;AACEF,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,QAAQ,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD;AAFZ,OALK;AAXT,KAD0C,CAA5C;AAwBA,QAAME,YAAY,GAAG,OAArB;AAEA,QAAMC,iBAAiB,GAAGf,cAAc,CACtC,oBAAC,oBAAD;AACE,MAAA,MAAM,EAAEQ,SADV;AAEE,MAAA,YAAY,EAAEM,YAFhB;AAGE,MAAA,QAAQ,EAAEX,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsC,CAAxC;AAQA,QAAMa,OAAO,GAAGD,iBAAiB,CAACE,IAAlB,CAAuB,IAAvB,EAA6BC,IAA7B,EAAhB;AACAC,IAAAA,MAAM,CAACH,OAAO,CAACJ,IAAR,EAAD,CAAN,CAAuBQ,IAAvB,CAA4BZ,SAAS,CAAC,CAAD,CAAT,CAAaK,KAAb,CAAmB,CAAnB,EAAsBD,IAAlD;AAEA,QAAMS,SAAS,GAAGN,iBAAiB,CAACE,IAAlB,CAAuBhB,IAAvB,EAA6BiB,IAA7B,EAAlB;AACAC,IAAAA,MAAM,CAACE,SAAS,CAACT,IAAV,EAAD,CAAN,CAAyBQ,IAAzB,CAA8BZ,SAAS,CAAC,CAAD,CAAT,CAAaC,SAAb,CAAuB,CAAvB,EAA0BG,IAAxD;AACD,GAxCD;AAyCD,CA5CQ,CAAT","sourcesContent":["import {cleanup} from '@testing-library/react';\nimport * as React from 'react';\nimport {mountWithTheme, Typo} from '@matthill8286/atomic-ui';\nimport {GroupRichTextSection} from './index';\nimport {GroupRichTextFieldType} from './GroupRichTextSection.types';\n\nconst mockAnchorId = 'groupTextAnchorId';\n\nxdescribe('Landing:Components:GroupRichTextSection', () => {\n  afterEach(cleanup);\n\n  it.todo('renders section with group richtext', () => {\n    const groupText: GroupRichTextFieldType[] = [\n      {\n        textField: [\n          {\n            type: 'paragraph',\n            children: [{text: 'This is how you test'}],\n          },\n          {\n            type: 'paragraph',\n            children: [{text: 'This is how you test'}],\n          },\n        ],\n        title: [\n          {\n            type: 'heading1',\n            children: [{text: 'This is how you test'}],\n          },\n          {\n            type: 'heading2',\n            children: [{text: 'This is how you test'}],\n          },\n        ],\n      },\n    ];\n    const sectionColor = 'grey1';\n\n    const renderCardSection = mountWithTheme(\n      <GroupRichTextSection\n        fields={groupText}\n        sectionColor={sectionColor}\n        anchorId={mockAnchorId}\n      />\n    );\n\n    const heading = renderCardSection.find('h1').last();\n    expect(heading.text()).toBe(groupText[0].title[0].text);\n\n    const paragraph = renderCardSection.find(Typo).last();\n    expect(paragraph.text()).toBe(groupText[0].textField[1].text);\n  });\n});\n"],"file":"GroupRichTextSection.test.js"}