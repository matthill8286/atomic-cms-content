{"version":3,"sources":["../../../src/components/AccordionSection/AccordionSection.test.tsx"],"names":["cleanup","React","mountWithTheme","Accordion","CopyText","Heading","router","AccordionSection","Elements","testText","accordionEntries","entries","anchorId","entryHeadline","raw","children","type","heading3","text","entryContent","paragraph","afterEach","xdescribe","describe","beforeEach","jest","spyOn","mockReturnValue","pathname","hash","search","state","key","it","accordionSection","accordion","find","expect","prop","toBeUndefined","beforeAll","toBe","title","first","content"],"mappings":"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","sourcesContent":["import { cleanup } from '@testing-library/react'\nimport * as React from 'react'\nimport { mountWithTheme, Accordion, CopyText, Heading } from '@matthill8286/atomic-ui'\nimport router from 'react-router'\nimport { AccordionSection } from './index'\nimport { AccordionSectionProps, AccordionSchemaType } from './AccordionSection.types'\nimport { Elements } from '../../types/richtext'\n\nconst testText =\n  'Never gonna give you up Never gonna let you down Never gonna run around and desert you'\nconst accordionEntries: AccordionSectionProps = {\n  entries: [\n    {\n      anchorId: 'letmeanchoryou',\n      entryHeadline: {\n        raw: { children: [{ type: Elements.heading3, children: [{ text: \"It's a headline\" }] }] },\n      },\n      entryContent: {\n        raw: {\n          children: [{ type: Elements.paragraph, children: [{ text: testText }] }],\n        },\n      },\n    },\n    {\n      anchorId: 'second',\n      entryHeadline: {\n        raw: { children: [{ type: Elements.heading3, children: [{ text: \"It's a headline\" }] }] },\n      },\n      entryContent: {\n        raw: {\n          children: [{ type: Elements.paragraph, children: [{ text: testText }] }],\n        },\n      },\n    },\n    {\n      anchorId: 'third',\n      entryHeadline: {\n        raw: { children: [{ type: Elements.heading3, children: [{ text: \"It's a headline\" }] }] },\n      },\n      entryContent: {\n        raw: {\n          children: [{ type: Elements.paragraph, children: [{ text: testText }] }],\n        },\n      },\n    },\n  ],\n}\n\nafterEach(cleanup)\n\nxdescribe('Content:Common:Components:AccordionSection', () => {\n  describe('closed accordion', () => {\n    beforeEach(() => {\n      jest.spyOn(router, 'useLocation').mockReturnValue({\n        pathname: '/let/me/be/your/pathName',\n        hash: '',\n        search: '',\n        state: {},\n        key: '',\n      })\n    })\n\n    it('renders closed accordion', () => {\n      const accordionSection = mountWithTheme(\n        <AccordionSection\n          entries={accordionEntries.entries}\n          sectionColor=\"primary\"\n          textColor=\"grey3\"\n          isLarge={false}\n          withIconsOnRight\n        />\n      )\n      const accordion = accordionSection.find(Accordion)\n      expect(accordion.prop('openedIndex')).toBeUndefined()\n    })\n  })\n\n  describe('open accordion', () => {\n    beforeAll(() => {\n      jest.spyOn(router, 'useLocation').mockReturnValue({\n        pathname: '/let/me/be/your/pathName',\n        hash: '#letmeanchoryou',\n        search: '',\n        state: {},\n        key: '',\n      })\n    })\n\n    it('renders open accordion', () => {\n      const accordionSection = mountWithTheme(\n        <AccordionSection\n          entries={accordionEntries.entries}\n          sectionColor=\"primary\"\n          textColor=\"grey3\"\n          isLarge={false}\n          withIconsOnRight\n        />\n      )\n      const accordion = accordionSection.find(Accordion)\n      expect(accordion.prop('openedIndex')).toBe(0)\n    })\n\n    it('renders section with accordion and content', () => {\n      const accordionSection = mountWithTheme(\n        <AccordionSection\n          entries={accordionEntries.entries}\n          sectionColor=\"primary\"\n          textColor=\"grey3\"\n          isLarge={false}\n          withIconsOnRight\n        />\n      )\n      const title = accordionSection.find(Heading).first()\n      expect(title.text()).toBe(\"It's a headline\")\n      const content = accordionSection.find(CopyText).first()\n      expect(content.text()).toBe(testText)\n    })\n  })\n})\n"],"file":"AccordionSection.test.js"}