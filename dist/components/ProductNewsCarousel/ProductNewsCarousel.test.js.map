{"version":3,"sources":["../../../src/components/ProductNewsCarousel/ProductNewsCarousel.test.tsx"],"names":["React","ProductNewsCarousel","mockProducts","mountWithThemeAndRouter","productNames","renderWithThemeAndRouter","ScrollSnapSlider","SkeletonBlockItem","describe","carouselProps","products","i","length","push","beforeEach","loading","lazyLoad","tileWidth","context","NoProductsComponent","onProductClick","onSlideChange","it","wrapper","expect","toBeDefined","skip","find","toEqual","PromotedElement"],"mappings":";;AAAA,OAAO,wBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,SACEC,YADF,EAEEC,uBAFF,EAGEC,YAHF,EAIEC,wBAJF,EAKEC,gBALF,EAMEC,iBANF,QAQO,yBARP;AAUAC,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtC,MAAIC,aAAJ;AACA,MAAMC,QAAmB,GAAG,EAA5B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,YAAY,CAACQ,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,IAAAA,QAAQ,CAACG,IAAT,CAAcX,YAAY,CAACE,YAAY,CAACO,CAAD,CAAb,CAA1B;AACD;;AAEDG,EAAAA,UAAU,CAAC,YAAM;AACfL,IAAAA,aAAa,GAAG;AACdM,MAAAA,OAAO,EAAE,KADK;AAEdC,MAAAA,QAAQ,EAAE,IAFI;AAGdC,MAAAA,SAAS,EAAE,GAHG;AAIdC,MAAAA,OAAO,EAAE,WAJK;AAKdR,MAAAA,QAAQ,YAAMA,QAAN,CALM;AAMdS,MAAAA,mBAAmB,EAAE,IANP;AAOdC,MAAAA,cAAc,EAAE,0BAAM,CAAE,CAPV;AAQdC,MAAAA,aAAa,EAAE,yBAAM,CAAE;AART,KAAhB;AAUD,GAXS,CAAV;AAaAC,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAM;AACzC,QAAMC,OAAO,GAAGlB,wBAAwB,CAAC,oBAAC,mBAAD,EAAyBI,aAAzB,CAAD,CAAxC;AACAe,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,WAAhB;AACD,GAHC,CAAF;AAKAjB,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnCc,IAAAA,EAAE,CAACI,IAAH,CAAQ,qBAAR,EAA+B,YAAM;AACnC,UAAMH,OAAO,GAAGpB,uBAAuB,CAAC,oBAAC,mBAAD,eAAyBM,aAAzB;AAAwC,QAAA,OAAO;AAA/C,SAAD,CAAvC;AACAe,MAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,WAAhB;AACAD,MAAAA,MAAM,CAACD,OAAO,CAACI,IAAR,CAAarB,gBAAb,CAAD,CAAN,CAAuCmB,WAAvC;AACAD,MAAAA,MAAM,CAACD,OAAO,CAACI,IAAR,CAAapB,iBAAb,EAAgCK,MAAjC,CAAN,CAA+CgB,OAA/C,CAAuD,CAAvD;AACD,KALD;AAMD,GAPO,CAAR;AASApB,EAAAA,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtC,QAAMqB,eAAyB,GAAG,SAA5BA,eAA4B;AAAA,aAAM,iDAAN;AAAA,KAAlC;;AACAP,IAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAM;AAChC,UAAMC,OAAO,GAAGpB,uBAAuB,CACrC,oBAAC,mBAAD,eAAyBM,aAAzB;AAAwC,QAAA,aAAa,EAAE,CAAvD;AAA0D,QAAA,QAAQ,EAAE,oBAAC,eAAD;AAApE,SADqC,CAAvC;AAGAe,MAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,WAAhB;AACAD,MAAAA,MAAM,CAACD,OAAO,CAACI,IAAR,CAAaE,eAAb,CAAD,CAAN,CAAsCJ,WAAtC;AACD,KANC,CAAF;AAOD,GATO,CAAR;AAUD,CA7CO,CAAR","sourcesContent":["import 'jest-styled-components'\nimport React from 'react'\nimport { ProductNewsCarousel } from './ProductNewsCarousel'\nimport { ProductNewsCarouselProps } from './ProductNewsCarousel.interface'\nimport {\n  mockProducts,\n  mountWithThemeAndRouter,\n  productNames,\n  renderWithThemeAndRouter,\n  ScrollSnapSlider,\n  SkeletonBlockItem,\n  Product,\n} from '@matthill8286/atomic-ui'\n\ndescribe('Product News Carousel', () => {\n  let carouselProps: ProductNewsCarouselProps\n  const products: Product[] = []\n\n  for (let i = 0; i < productNames.length; i++) {\n    products.push(mockProducts[productNames[i]])\n  }\n\n  beforeEach(() => {\n    carouselProps = {\n      loading: false,\n      lazyLoad: true,\n      tileWidth: 375,\n      context: 'dashboard',\n      products: [...products],\n      NoProductsComponent: null,\n      onProductClick: () => {},\n      onSlideChange: () => {},\n    }\n  })\n\n  it('renders the Scroll Snap Slider', () => {\n    const wrapper = renderWithThemeAndRouter(<ProductNewsCarousel {...carouselProps} />)\n    expect(wrapper).toBeDefined()\n  })\n\n  describe('with loading state', () => {\n    it.skip('renders as skeleton', () => {\n      const wrapper = mountWithThemeAndRouter(<ProductNewsCarousel {...carouselProps} loading />)\n      expect(wrapper).toBeDefined()\n      expect(wrapper.find(ScrollSnapSlider)).toBeDefined()\n      expect(wrapper.find(SkeletonBlockItem).length).toEqual(3)\n    })\n  })\n\n  describe('with promoted element', () => {\n    const PromotedElement: React.FC = () => <div>I am Promoted</div>\n    it('renders given element', () => {\n      const wrapper = mountWithThemeAndRouter(\n        <ProductNewsCarousel {...carouselProps} promotedIndex={2} promoted={<PromotedElement />} />\n      )\n      expect(wrapper).toBeDefined()\n      expect(wrapper.find(PromotedElement)).toBeDefined()\n    })\n  })\n})\n"],"file":"ProductNewsCarousel.test.js"}