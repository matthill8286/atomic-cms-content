{"version":3,"sources":["../../../src/components/ImageTextSection/index.tsx"],"names":["React","Grid","Row","Offset","Cell","ImageAndText","CustomSection","Serializer","ConfigurableGraphCmsHtmlSerializer","ImageTextSection","imageAndTextFields","textColor","sectionColor","primaryColor","renderImageAndText","imageAndTextEntry","index","image","text","imageAlignment","anchorId","desktop","color","map","field"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,YALF,QAOO,yBAPP;AAYA,SAAQC,aAAR;AACA,SAAQC,UAAR,EAAoBC,kCAApB;AAEA;AAEA,OAAO,IAAMC,gBAAiD,GAAG,SAApDA,gBAAoD,OAK3D;AAAA,MAJJC,kBAII,QAJJA,kBAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,YACI,QADJA,YACI;;AACJ,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,iBADyB,EAEzBC,KAFyB,EAGtB;AACH,QAAOC,KAAP,GAAgDF,iBAAhD,CAAOE,KAAP;AAAA,QAAcC,IAAd,GAAgDH,iBAAhD,CAAcG,IAAd;AAAA,QAAoBC,cAApB,GAAgDJ,iBAAhD,CAAoBI,cAApB;AAAA,QAAoCC,QAApC,GAAgDL,iBAAhD,CAAoCK,QAApC;AACA,WACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAER,YAAtB;AAAoC,MAAA,GAAG,EAAEI,KAAzC;AAAgD,MAAA,EAAE,EAAEI;AAApD,OACE,oBAAC,IAAD,QACE,oBAAC,GAAD;AAAK,MAAA,QAAQ;AAAb,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,CAAhB;AAAmB,MAAA,MAAM,EAAE,CAA3B;AAA8B,MAAA,MAAM,EAAE,CAAtC;AAAyC,MAAA,MAAM,EAAE,CAAjD;AAAoD,MAAA,MAAM,EAAE;AAA5D,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAE,EAAd;AAAkB,MAAA,MAAM,EAAE,EAA1B;AAA8B,MAAA,MAAM,EAAE,CAAtC;AAAyC,MAAA,MAAM,EAAE,CAAjD;AAAoD,MAAA,MAAM,EAAE;AAA5D,OACGH,KAAK,GACJ,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAEI,OAAP,GAAiBJ,KAAjB,aAAiBA,KAAjB,uBAAiBA,KAAK,CAAEI,OAAxB,GAAkCJ,KAD3C;AAEE,MAAA,cAAc,EAAEE;AAFlB,OAIGD,IAAI,IACHX,UAAU,CACRW,IADQ,EAERV,kCAAkC,CAAC;AACjCc,MAAAA,KAAK,EAAEX,SAD0B;AAEjCE,MAAAA,YAAY,EAAZA;AAFiC,KAAD,CAF1B,CALd,CADI,GAeJK,IAAI,IACJX,UAAU,CACRW,IADQ,EAERV,kCAAkC,CAAC;AACjCc,MAAAA,KAAK,EAAEX,SAD0B;AAEjCE,MAAAA,YAAY,EAAZA;AAFiC,KAAD,CAF1B,CAjBd,CAFF,CADF,CADF,CADF;AAmCD,GAxCD;;AA0CA,SACE,0CACGH,kBAAkB,CAACa,GAAnB,CAAuB,UAACC,KAAD,EAAQR,KAAR;AAAA,WACtBF,kBAAkB,CAACU,KAAD,EAAQR,KAAR,CADI;AAAA,GAAvB,CADH,CADF;AAOD,CAvDM","sourcesContent":["import * as React from 'react';\nimport {\n  Grid,\n  Row,\n  Offset,\n  Cell,\n  ImageAndText,\n  ImageAlignment,\n} from '@matthill8286/atomic-ui';\nimport {\n  ImageTextSectionProps,\n  ImageAndTextSectionField,\n} from './ImageTextSection.types';\nimport {CustomSection} from '../CustomSection';\nimport {Serializer, ConfigurableGraphCmsHtmlSerializer} from '../Serializer';\n\nexport * from './ImageTextSection.types';\n\nexport const ImageTextSection: React.FC<ImageTextSectionProps> = ({\n  imageAndTextFields,\n  textColor,\n  sectionColor,\n  primaryColor,\n}) => {\n  const renderImageAndText = (\n    imageAndTextEntry: ImageAndTextSectionField,\n    index: number\n  ) => {\n    const {image, text, imageAlignment, anchorId} = imageAndTextEntry;\n    return (\n      <CustomSection color={sectionColor} key={index} id={anchorId}>\n        <Grid>\n          <Row noMargin>\n            <Offset colsXl={1} colsLg={1} colsMd={1} colsSm={1} colsXs={0} />\n            <Cell colsXl={10} colsLg={10} colsMd={6} colsSm={6} colsXs={4}>\n              {image ? (\n                <ImageAndText\n                  image={image?.desktop ? image?.desktop : image}\n                  imageAlignment={imageAlignment as ImageAlignment}\n                >\n                  {text &&\n                    Serializer(\n                      text,\n                      ConfigurableGraphCmsHtmlSerializer({\n                        color: textColor,\n                        primaryColor,\n                      })\n                    )}\n                </ImageAndText>\n              ) : (\n                text &&\n                Serializer(\n                  text,\n                  ConfigurableGraphCmsHtmlSerializer({\n                    color: textColor,\n                    primaryColor,\n                  })\n                )\n              )}\n            </Cell>\n          </Row>\n        </Grid>\n      </CustomSection>\n    );\n  };\n\n  return (\n    <>\n      {imageAndTextFields.map((field, index) =>\n        renderImageAndText(field, index)\n      )}\n    </>\n  );\n};\n"],"file":"index.js"}