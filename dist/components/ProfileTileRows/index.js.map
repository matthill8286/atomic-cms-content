{"version":3,"sources":["../../../src/components/ProfileTileRows/index.tsx"],"names":["React","useMemo","Cell","styled","CopyText","Heading","MediaStyleSwitch","media","ConfigurableGraphCmsHtmlSerializer","Serializer","CustomSection","StyledAvatar","StyledAvatarWrapper","StyledPaddedSection","StyledProfileSection","StyledCard","StyledProfileDetailsColumn","ProfileTileColumn","StyledWrapper","div","theme","marginTop","spacing","base","SpeakerHeader","title","name","ProfileTileRow","profileAvatar","profileInformation","altText","url","raw","textAlign","inline","withIconOnLink","linkPadding","linkColor","linkScale","margins","BrandedHeadingWrapper","md","lg","maxSm","xxxl","ProfileTileRows","profileSections","label","sectionColor","paddingTop","paddingBottom","profiles","map","index","mobileProfiles","mobileViewWithDefault"],"mappings":"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","sourcesContent":["import React, { FC, useMemo } from 'react'\nimport {\n  Row,\n  Cell,\n  TwelveColumn,\n  styled,\n  CopyText,\n  Heading,\n  MediaStyleSwitch,\n  media,\n} from '@matthill8286/atomic-ui'\nimport { ConfigurableGraphCmsHtmlSerializer, Serializer } from '../Serializer'\nimport { CustomSection } from '../CustomSection'\nimport {\n  StyledAvatar,\n  StyledAvatarWrapper,\n  StyledPaddedSection,\n  StyledProfileSection,\n  StyledCard,\n  StyledProfileDetailsColumn,\n} from './ProfileTileRows.styled'\nimport {\n  ProfileSectionProps,\n  ProfileSectionsProps,\n} from '../ProfileTileColumns/ProfileTileColumns.interface'\nimport { ProfileTileColumn, ProfileTileColumns } from '../ProfileTileColumns'\n\nconst StyledWrapper = styled.div<{ marginTop: string }>`\n  margin-top: ${({ theme, marginTop }) => theme.spacing.base[marginTop] ?? 0};\n`\n\nexport const SpeakerHeader = ({ title, name, marginTop }) => (\n  <StyledWrapper marginTop={marginTop}>\n    <CopyText\n      limitLines={1}\n      fontSize=\"sm\"\n      as=\"div\"\n      toUpperCase\n      weight=\"bold\"\n      display=\"inline-flex\"\n      margin=\"0 sm xs 0\">\n      {title}\n    </CopyText>\n    <Heading\n      color=\"primary\"\n      scale=\"level-2\"\n      tag=\"h2\"\n      lineHeight=\"sm\"\n      fontFamily=\"default\"\n      weight=\"bold\">\n      {name}\n    </Heading>\n  </StyledWrapper>\n)\n\nexport const ProfileTileRow: FC<ProfileSectionProps> = ({ profileAvatar, profileInformation }) => {\n  return (\n    <StyledProfileSection>\n      <StyledCard elevation={0} elevationHover={0} noBorder={'none'} display=\"flex\" surface=\"clear\">\n        <StyledAvatarWrapper>\n          <StyledAvatar alt={profileAvatar?.altText} src={profileAvatar?.url} rounded />\n        </StyledAvatarWrapper>\n        <StyledProfileDetailsColumn>\n          <StyledPaddedSection>\n            {Serializer(\n              profileInformation?.raw,\n              // @ts-ignore\n              ConfigurableGraphCmsHtmlSerializer({\n                textAlign: 'left',\n                inline: true,\n                withIconOnLink: true,\n                linkPadding: 'sm 0',\n                linkColor: 'primary',\n                linkScale: 'small',\n                margins: 'xs 0',\n              })\n            )}\n          </StyledPaddedSection>\n        </StyledProfileDetailsColumn>\n      </StyledCard>\n    </StyledProfileSection>\n  )\n}\n\nexport const BrandedHeadingWrapper = styled.div`\n  margin: ${({ theme }) => `${theme.spacing.base.md} 0 ${theme.spacing.base.lg} 0`};\n\n  ${media.maxSm} {\n    margin-bottom: ${({ theme }) => theme.spacing.base.xxxl};\n  }\n`\n\nexport const ProfileTileRows: FC<ProfileSectionsProps> = ({\n  profileSections,\n  label,\n  title,\n  sectionColor,\n  paddingTop,\n  paddingBottom,\n}) => {\n  const profiles = useMemo(\n    () =>\n      profileSections?.map(({ profileAvatar, profileInformation }, index) => (\n        <Cell columns={12 as TwelveColumn} key={`RichText-${index}`}>\n          <ProfileTileRow profileAvatar={profileAvatar} profileInformation={profileInformation} />\n        </Cell>\n      )),\n    [profileSections]\n  )\n  const mobileProfiles = useMemo(\n    () =>\n      profileSections?.map(({ profileAvatar, profileInformation }, index) => (\n        <Cell columns={12 as TwelveColumn} key={`RichText-${index}`}>\n          <ProfileTileColumn\n            profileAvatar={profileAvatar}\n            profileInformation={profileInformation}\n          />\n        </Cell>\n      )),\n    [profileSections]\n  )\n\n  const mobileViewWithDefault = (\n    <>\n      <MediaStyleSwitch query={media.maxSm} activeDisplay=\"block\" inactiveDisplay=\"none\">\n        {mobileProfiles}\n      </MediaStyleSwitch>\n      <MediaStyleSwitch query=\"desktop\" activeDisplay=\"block\" inactiveDisplay=\"none\">\n        {profiles}\n      </MediaStyleSwitch>\n    </>\n  )\n\n  return (\n    <CustomSection color={sectionColor} paddingTop={paddingTop} paddingBottom={paddingBottom}>\n      <BrandedHeadingWrapper>\n        <SpeakerHeader title={title} name={label} marginTop={null} />\n      </BrandedHeadingWrapper>\n      {mobileViewWithDefault}\n    </CustomSection>\n  )\n}\n"],"file":"index.js"}