{"version":3,"sources":["../../../src/components/ProfileTileRows/index.tsx"],"names":["React","useMemo","Cell","styled","CopyText","Heading","MediaStyleSwitch","media","ConfigurableGraphCmsHtmlSerializer","Serializer","CustomSection","StyledAvatar","StyledAvatarWrapper","StyledPaddedSection","StyledProfileSection","StyledCard","StyledProfileDetailsColumn","ProfileTileColumn","StyledWrapper","div","theme","marginTop","spacing","base","SpeakerHeader","title","name","ProfileTileRow","profileAvatar","profileInformation","altText","url","raw","textAlign","inline","withIconOnLink","linkPadding","linkColor","linkScale","margins","BrandedHeadingWrapper","md","lg","maxSm","xxxl","ProfileTileRows","profileSections","label","sectionColor","paddingTop","paddingBottom","profiles","map","index","mobileProfiles","mobileViewWithDefault"],"mappings":"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","sourcesContent":["import React, {FC, useMemo} from 'react';\nimport {\n  Row,\n  Cell,\n  TwelveColumn,\n  styled,\n  CopyText,\n  Heading,\n  MediaStyleSwitch,\n  media,\n} from '@matthill8286/atomic-ui';\nimport {ConfigurableGraphCmsHtmlSerializer, Serializer} from '../Serializer';\nimport {CustomSection} from '../CustomSection';\nimport {\n  StyledAvatar,\n  StyledAvatarWrapper,\n  StyledPaddedSection,\n  StyledProfileSection,\n  StyledCard,\n  StyledProfileDetailsColumn,\n} from './ProfileTileRows.styled';\nimport {\n  ProfileSectionProps,\n  ProfileSectionsProps,\n} from '../ProfileTileColumns/ProfileTileColumns.interface';\nimport {ProfileTileColumn, ProfileTileColumns} from '../ProfileTileColumns';\n\nconst StyledWrapper = styled.div<{marginTop: string}>`\n  margin-top: ${({theme, marginTop}) => theme.spacing.base[marginTop] ?? 0};\n`;\n\nexport const SpeakerHeader = ({title, name, marginTop}) => (\n  <StyledWrapper marginTop={marginTop}>\n    <CopyText\n      limitLines={1}\n      fontSize=\"sm\"\n      as=\"div\"\n      toUpperCase\n      weight=\"bold\"\n      display=\"inline-flex\"\n      margin=\"0 sm xs 0\"\n    >\n      {title}\n    </CopyText>\n    <Heading\n      color=\"primary\"\n      scale=\"level-2\"\n      tag=\"h2\"\n      lineHeight=\"sm\"\n      fontFamily=\"default\"\n      weight=\"bold\"\n    >\n      {name}\n    </Heading>\n  </StyledWrapper>\n);\n\nexport const ProfileTileRow: FC<ProfileSectionProps> = ({\n  profileAvatar,\n  profileInformation,\n}) => {\n  return (\n    <StyledProfileSection>\n      <StyledCard\n        elevation={0}\n        elevationHover={0}\n        noBorder={'none'}\n        display=\"flex\"\n        surface=\"clear\"\n      >\n        <StyledAvatarWrapper>\n          <StyledAvatar\n            alt={profileAvatar?.altText}\n            src={profileAvatar?.url}\n            rounded\n          />\n        </StyledAvatarWrapper>\n        <StyledProfileDetailsColumn>\n          <StyledPaddedSection>\n            {Serializer(\n              profileInformation?.raw,\n              ConfigurableGraphCmsHtmlSerializer({\n                textAlign: 'left',\n                inline: true,\n                withIconOnLink: true,\n                linkPadding: 'sm 0',\n                linkColor: 'primary',\n                linkScale: 'small',\n                margins: 'xs 0',\n              })\n            )}\n          </StyledPaddedSection>\n        </StyledProfileDetailsColumn>\n      </StyledCard>\n    </StyledProfileSection>\n  );\n};\n\nexport const BrandedHeadingWrapper = styled.div`\n  margin: ${({theme}) =>\n    `${theme.spacing.base.md} 0 ${theme.spacing.base.lg} 0`};\n\n  ${media.maxSm} {\n    margin-bottom: ${({theme}) => theme.spacing.base.xxxl};\n  }\n`;\n\nexport const ProfileTileRows: FC<ProfileSectionsProps> = ({\n  profileSections,\n  label,\n  title,\n  sectionColor,\n  paddingTop,\n  paddingBottom,\n}) => {\n  const profiles = useMemo(\n    () =>\n      profileSections?.map(({profileAvatar, profileInformation}, index) => (\n        <Cell columns={12 as TwelveColumn} key={`RichText-${index}`}>\n          <ProfileTileRow\n            profileAvatar={profileAvatar}\n            profileInformation={profileInformation}\n          />\n        </Cell>\n      )),\n    [profileSections]\n  );\n  const mobileProfiles = useMemo(\n    () =>\n      profileSections?.map(({profileAvatar, profileInformation}, index) => (\n        <Cell columns={12 as TwelveColumn} key={`RichText-${index}`}>\n          <ProfileTileColumn\n            profileAvatar={profileAvatar}\n            profileInformation={profileInformation}\n          />\n        </Cell>\n      )),\n    [profileSections]\n  );\n\n  const mobileViewWithDefault = (\n    <>\n      <MediaStyleSwitch\n        query={media.maxSm}\n        activeDisplay=\"block\"\n        inactiveDisplay=\"none\"\n      >\n        {mobileProfiles}\n      </MediaStyleSwitch>\n      <MediaStyleSwitch\n        query=\"desktop\"\n        activeDisplay=\"block\"\n        inactiveDisplay=\"none\"\n      >\n        {profiles}\n      </MediaStyleSwitch>\n    </>\n  );\n\n  return (\n    <CustomSection\n      color={sectionColor}\n      paddingTop={paddingTop}\n      paddingBottom={paddingBottom}\n    >\n      <BrandedHeadingWrapper>\n        <SpeakerHeader title={title} name={label} marginTop={null} />\n      </BrandedHeadingWrapper>\n      {mobileViewWithDefault}\n    </CustomSection>\n  );\n};\n"],"file":"index.js"}