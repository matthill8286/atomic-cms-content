{"version":3,"sources":["../../src/components/LandingPagesConnector.tsx"],"names":["React","useQuery","ErrorPage","GenericLoadingScreenScrollToTop","GraphCmsInstanceContext","ErrorPageType","LandingPagesConnector","pageId","getLandingPageQuery","children","useContext","localisation","variables","id","locale","skip","context","clientName","loading","data","error","TECHNICAL_ERROR","staticPage","NOT_FOUND","pageContent"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAuBC,QAAvB,QAAuC,gBAAvC;AAEA,SAASC,SAAT;AACA,SAASC,+BAAT;AACA,SACEC,uBADF;AAIA,SAASC,aAAT;AAiBA,OAAO,IAAMC,qBAAmD,GAAG,SAAtDA,qBAAsD,OAI7D;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,0BAAyBT,KAAK,CAACU,UAAN,CACvBN,uBADuB,CAAzB;AAAA,MAAQO,YAAR,qBAAQA,YAAR;;AAGA,kBAAiCV,QAAQ,CAAOO,mBAAP,EAA4B;AACnEI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN,MAAN;AAAcO,MAAAA,MAAM,EAAEH;AAAtB,KADwD;AAEnEI,IAAAA,IAAI,EAAE,CAACR,MAF4D;AAGnES,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAE;AADL;AAH0D,GAA5B,CAAzC;AAAA,MAAQC,OAAR,aAAQA,OAAR;AAAA,MAAiBC,IAAjB,aAAiBA,IAAjB;AAAA,MAAuBC,KAAvB,aAAuBA,KAAvB;;AAQA,MAAIF,OAAJ,EAAa;AACX,WAAO,oBAAC,+BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,KAAJ,EAAW;AACT,WAAO,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEf,aAAa,CAACgB,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAI,EAACF,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEG,UAAP,CAAJ,EAAuB;AACrB,WAAO,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEjB,aAAa,CAACkB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAMC,WAAW,GAAGL,IAAI,CAACG,UAAzB;AAEA,SAAOb,QAAQ,CAAC;AAAEe,IAAAA,WAAW,EAAXA;AAAF,GAAD,CAAf;AACD,CA/BM","sourcesContent":["import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { DocumentNode, useQuery } from '@apollo/client';\nimport { Zone } from '@lxp/webmobile-cms-graphql';\nimport { ErrorPage } from '@/components/Error';\nimport { GenericLoadingScreenScrollToTop } from '@/components/GenericLoadingScreen';\nimport {\n  GraphCmsInstanceContext,\n  InstanceContextTypes,\n} from '@/context/instance';\nimport { ErrorPageType } from '../types';\n\nexport type MatchParams = {\n  pathname: string;\n};\n\nexport type LandingConnectedPageProps = RouteComponentProps<MatchParams> & {\n  landingPageContent: PageConnectorProps;\n  pageId?: string;\n};\n\nexport type PageConnectorProps = {\n  pageId: string | null;\n  getLandingPageQuery: DocumentNode;\n  children(props: { pageContent: any }): JSX.Element;\n};\n\nexport const LandingPagesConnector: React.FC<PageConnectorProps> = ({\n  pageId,\n  getLandingPageQuery,\n  children,\n}) => {\n  const { localisation } = React.useContext<InstanceContextTypes>(\n    GraphCmsInstanceContext\n  );\n  const { loading, data, error } = useQuery<Zone>(getLandingPageQuery, {\n    variables: { id: pageId, locale: localisation },\n    skip: !pageId,\n    context: {\n      clientName: 'graphcms',\n    },\n  });\n\n  if (loading) {\n    return <GenericLoadingScreenScrollToTop />;\n  }\n\n  if (error) {\n    return <ErrorPage errorType={ErrorPageType.TECHNICAL_ERROR} />;\n  }\n\n  if (!data?.staticPage) {\n    return <ErrorPage errorType={ErrorPageType.NOT_FOUND} />;\n  }\n\n  const pageContent = data.staticPage;\n\n  return children({ pageContent });\n};\n"],"file":"LandingPagesConnector.js"}