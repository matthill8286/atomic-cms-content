{"version":3,"sources":["../../../src/components/ServicesItem/ServicesItem.tsx"],"names":["React","css","styled","Picture","CopyText","Heading","ServicesItemImage","ServicesWrapper","div","theme","spacing","base","md","variant","color","white","black","alert","ServicesItemContent","PostTitle","ServicesItem","title","description","backgroundImage","number","withOverline","limitLines","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,OAAzC,QAAwD,yBAAxD;AAEA,OAAO,IAAMC,iBAAiB,GAAGJ,MAAM,CAACC,OAAD,CAAT;AAAA;AAAA;AAAA,2SAAvB;AAmBP,OAAO,IAAMI,eAAe,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,iaAMf;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAAlC;AAAA,CANe,EAOZ;AAAA,MAAGC,OAAH,SAAGA,OAAH;AAAA,MAAYJ,KAAZ,SAAYA,KAAZ;AAAA,SACVI,OAAO,KAAK,OAAZ,GAAsBJ,KAAK,CAACK,KAAN,CAAYC,KAAlC,GAA0CN,KAAK,CAACK,KAAN,CAAYE,KAD5C;AAAA,CAPY,EAgCR;AAAA,MAAGH,OAAH,SAAGA,OAAH;AAAA,MAAYJ,KAAZ,SAAYA,KAAZ;AAAA,SACZI,OAAO,KAAK,OAAZ,GAAsBJ,KAAK,CAACK,KAAN,CAAYE,KAAlC,GAA0CP,KAAK,CAACK,KAAN,CAAYG,KAD1C;AAAA,CAhCQ,CAArB;AAsCP,OAAO,IAAMC,mBAAmB,GAAGhB,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,oCAAzB;AAKP,OAAO,IAAMW,SAAS,GAAGjB,MAAM,CAACG,OAAD,CAAT;AAAA;AAAA;AAAA,wCAGlB;AAAA,MAAGI,KAAH,SAAGA,KAAH;AAAA,MAAUI,OAAV,SAAUA,OAAV;AAAA,SACAA,OAAO,KAAK,OAAZ,GACIZ,GADJ,+DAUIA,GAVJ,wEADA;AAAA,CAHkB,CAAf;AA0BP,OAAO,IAAMmB,YAAyC,GAAG,SAA5CA,YAA4C,QASnD;AAAA,MARJC,KAQI,SARJA,KAQI;AAAA,MAPJC,WAOI,SAPJA,WAOI;AAAA,MANJC,eAMI,SANJA,eAMI;AAAA,MALJC,MAKI,SALJA,MAKI;AAAA,MAJJX,OAII,SAJJA,OAII;AAAA,iCAHJY,YAGI;AAAA,MAHJA,YAGI,mCAHW,IAGX;AAAA,MAFJC,UAEI,SAFJA,UAEI;AAAA,MADJC,QACI,SADJA,QACI;AACJ,SACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEd;AAA1B,KACE,oBAAC,mBAAD,QACE;AAAK,IAAA,SAAS,EAAC;AAAf,IADF,EAGE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,MAAM,EAAC,GAAhC;AAAoC,IAAA,SAAS,EAAC;AAA9C,KACGW,MADH,CADF,EAKE;AAAK,IAAA,SAAS,EAAC;AAAf,IALF,EAOGC,YAAY,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,IAPnB,EASE;AAAK,IAAA,SAAS,EAAC;AAAf,IATF,EAWE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,GAAG,EAAC,KAA/B;AAAqC,IAAA,SAAS,MAA9C;AAA+C,IAAA,OAAO,EAAEZ;AAAxD,KACGQ,KADH,CAXF,EAeE;AAAK,IAAA,SAAS,EAAC;AAAf,IAfF,EAiBE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAEK,UAAtB;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAgD,IAAA,SAAS,EAAC;AAA1D,KACGJ,WADH,CADF,EAIGK,QAJH,CAjBF,CAHF,EA4BE;AAAK,IAAA,SAAS,EAAC;AAAf,IA5BF,CADF,EAgCE,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAC,cAAvB;AAAsC,IAAA,GAAG,EAAEJ;AAA3C,IAhCF,CADF;AAoCD,CA9CM","sourcesContent":["import React from 'react'\nimport { ServicesItemProps, ServicesVariant } from './ServicesItem.interface'\nimport { css, styled, Picture, CopyText, Heading } from '@matthill8286/atomic-ui'\n\nexport const ServicesItemImage = styled(Picture)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0.2;\n  filter: alpha(opacity=20);\n  -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=20)';\n  transition: all 0.3s linear;\n  z-index: 1;\n\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    .img-cover {\n      display: none;\n      visibility: hidden;\n    }\n  }\n`\n\nexport const ServicesWrapper = styled.div<{ variant: ServicesVariant }>`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: all 0.3s linear;\n  z-index: 10;\n  padding: ${({ theme }) => theme.spacing.base.md};\n  background: ${({ variant, theme }) =>\n      variant === 'light' ? theme.color.white : theme.color.black}\n    no-repeat center center;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2;\n  }\n\n  &:hover {\n    transition: all 0.3s linear;\n\n    img {\n      opacity: 0;\n      filter: alpha(opacity=0);\n      -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=0)';\n      transition: all 0.3s linear;\n    }\n\n    .the-overline {\n      background: ${({ variant, theme }) =>\n        variant === 'light' ? theme.color.black : theme.color.alert};\n    }\n  }\n`\n\nexport const ServicesItemContent = styled.div`\n  position: relative;\n  z-index: 3;\n`\n\nexport const PostTitle = styled(Heading)<{ variant: ServicesVariant }>`\n  transition: all 0.3s linear;\n\n  ${({ theme, variant }) =>\n    variant === 'light'\n      ? css`\n          &:hover {\n            color: #ff264a;\n\n            .the-overline {\n              background: #fff;\n            }\n          }\n        `\n      : css`\n          color: white;\n          &:hover {\n            color: #fff;\n\n            .the-overline {\n              background: #ff264a;\n            }\n          }\n        `}\n`\n\nexport const ServicesItem: React.FC<ServicesItemProps> = ({\n  title,\n  description,\n  backgroundImage,\n  number,\n  variant,\n  withOverline = true,\n  limitLines,\n  children,\n}) => {\n  return (\n    <ServicesWrapper variant={variant}>\n      <ServicesItemContent>\n        <div className=\"inner-divider\" />\n\n        <div className=\"post-all inner-spacer-services\">\n          <Heading scale=\"level-5\" margin=\"0\" className=\"services-sub-header-dark\">\n            {number}\n          </Heading>\n\n          <div className=\"inner-divider-half\" />\n\n          {withOverline && <div className=\"the-overline services-dark the-overline-services\" />}\n\n          <div className=\"inner-divider-half\" />\n\n          <PostTitle scale=\"level-2\" tag=\"div\" uppercase variant={variant}>\n            {title}\n          </PostTitle>\n\n          <div className=\"inner-divider-services\" />\n\n          <div className=\"section-txt-services section-txt-services-dark\">\n            <CopyText limitLines={limitLines} color=\"grey4\" textAlign=\"left\">\n              {description}\n            </CopyText>\n            {children}\n          </div>\n        </div>\n\n        <div className=\"inner-divider\" />\n      </ServicesItemContent>\n\n      <ServicesItemImage alt=\"Services Img\" src={backgroundImage} />\n    </ServicesWrapper>\n  )\n}\n"],"file":"ServicesItem.js"}