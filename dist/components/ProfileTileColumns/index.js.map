{"version":3,"sources":["../../../src/components/ProfileTileColumns/index.tsx"],"names":["React","useMemo","Row","Cell","Heading","Card","ConfigurableGraphCmsHtmlSerializer","Serializer","CustomSection","StyledAvatar","StyledPaddedSection","StyledProfileSection","StyledRelative","StyledAvatarWrapper","ProfileTileColumn","profileAvatar","profileInformation","altText","url","raw","textAlign","contentAlign","ProfileTileColumns","profileSections","title","sectionColor","paddingTop","paddingBottom","profileColumns","map","index","length"],"mappings":"AAAA,OAAOA,KAAP,IAAmBC,OAAnB,QAAiC,OAAjC;AACA,SACEC,GADF,EAEEC,IAFF,EAIEC,OAJF,EAKEC,IALF,QAMO,yBANP;AAOA,SAAQC,kCAAR,EAA4CC,UAA5C;AACA,SAAQC,aAAR;AACA,SACEC,YADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,cAJF;AAUA,SAAQC,mBAAR;AAEA,OAAO,IAAMC,iBAA0C,GAAG,SAA7CA,iBAA6C,OAGpD;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,kBACI,QADJA,kBACI;AACJ,SACE,oBAAC,oBAAD,QACE,oBAAC,cAAD,QACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,CAAjB;AAAoB,IAAA,cAAc,EAAE,CAApC;AAAuC,IAAA,OAAO,EAAC;AAA/C,KACE,oBAAC,mBAAD,QACE,oBAAC,YAAD;AACE,IAAA,GAAG,EAAED,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEE,OADtB;AAEE,IAAA,GAAG,EAAEF,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEG,GAFtB;AAGE,IAAA,OAAO;AAHT,IADF,CADF,EAQE,oBAAC,mBAAD,QACGX,UAAU,CACTS,kBADS,aACTA,kBADS,uBACTA,kBAAkB,CAAEG,GADX,EAETb,kCAAkC,CAAC;AACjCc,IAAAA,SAAS,EAAE,QADsB;AAEjCC,IAAAA,YAAY,EAAE;AAFmB,GAAD,CAFzB,CADb,CARF,CADF,CADF,CADF;AAwBD,CA5BM;AA8BP,OAAO,IAAMC,kBAA4C,GAAG,SAA/CA,kBAA+C,QAMtD;AAAA,MALJC,eAKI,SALJA,eAKI;AAAA,MAJJC,KAII,SAJJA,KAII;AAAA,MAHJC,YAGI,SAHJA,YAGI;AAAA,MAFJC,UAEI,SAFJA,UAEI;AAAA,MADJC,aACI,SADJA,aACI;AACJ,MAAMC,cAAc,GAAG3B,OAAO,CAC5B;AAAA,WACEsB,eADF,aACEA,eADF,uBACEA,eAAe,CAAEM,GAAjB,CAAqB,iBAAsCC,KAAtC;AAAA,UAAEf,aAAF,SAAEA,aAAF;AAAA,UAAiBC,kBAAjB,SAAiBA,kBAAjB;AAAA,aACnB,oBAAC,IAAD;AACE,QAAA,OAAO,EAAG,KAAKO,eAAe,CAACQ,MADjC;AAEE,QAAA,GAAG,qBAAcD,KAAd;AAFL,SAIE,oBAAC,iBAAD;AACE,QAAA,aAAa,EAAEf,aADjB;AAEE,QAAA,kBAAkB,EAAEC;AAFtB,QAJF,CADmB;AAAA,KAArB,CADF;AAAA,GAD4B,EAa5B,EAb4B,CAA9B;AAeA,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAES,YADT;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,aAAa,EAAEC;AAHjB,KAKE,oBAAC,GAAD;AAAK,IAAA,QAAQ;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE;AAAf,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,QAAnC;AAA4C,IAAA,MAAM,EAAC;AAAnD,KACGH,KADH,CADF,CADF,CALF,EAYE,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAC;AAA1B,KACE,oBAAC,mBAAD,QACE,oBAAC,GAAD;AAAK,IAAA,QAAQ;AAAb,KAAeI,cAAf,CADF,CADF,CAZF,CADF;AAoBD,CA1CM","sourcesContent":["import React, {FC, useMemo} from 'react';\nimport {\n  Row,\n  Cell,\n  TwelveColumn,\n  Heading,\n  Card,\n} from '@matthill8286/atomic-ui';\nimport {ConfigurableGraphCmsHtmlSerializer, Serializer} from '../Serializer';\nimport {CustomSection} from '../CustomSection';\nimport {\n  StyledAvatar,\n  StyledPaddedSection,\n  StyledProfileSection,\n  StyledRelative,\n} from './ProfileTileColumns.styled';\nimport {\n  ProfileSectionProps,\n  ProfileSectionsProps,\n} from './ProfileTileColumns.interface';\nimport {StyledAvatarWrapper} from '../ProfileTileRows/ProfileTileRows.styled';\n\nexport const ProfileTileColumn: FC<ProfileSectionProps> = ({\n  profileAvatar,\n  profileInformation,\n}) => {\n  return (\n    <StyledProfileSection>\n      <StyledRelative>\n        <Card elevation={1} elevationHover={0} surface=\"white\">\n          <StyledAvatarWrapper>\n            <StyledAvatar\n              alt={profileAvatar?.altText}\n              src={profileAvatar?.url}\n              rounded\n            />\n          </StyledAvatarWrapper>\n          <StyledPaddedSection>\n            {Serializer(\n              profileInformation?.raw,\n              ConfigurableGraphCmsHtmlSerializer({\n                textAlign: 'center',\n                contentAlign: 'center',\n              })\n            )}\n          </StyledPaddedSection>\n        </Card>\n      </StyledRelative>\n    </StyledProfileSection>\n  );\n};\n\nexport const ProfileTileColumns: FC<ProfileSectionsProps> = ({\n  profileSections,\n  title,\n  sectionColor,\n  paddingTop,\n  paddingBottom,\n}) => {\n  const profileColumns = useMemo(\n    () =>\n      profileSections?.map(({profileAvatar, profileInformation}, index) => (\n        <Cell\n          columns={(12 / profileSections.length) as TwelveColumn}\n          key={`RichText-${index}`}\n        >\n          <ProfileTileColumn\n            profileAvatar={profileAvatar}\n            profileInformation={profileInformation}\n          />\n        </Cell>\n      )),\n    []\n  );\n  return (\n    <CustomSection\n      color={sectionColor}\n      paddingTop={paddingTop}\n      paddingBottom={paddingBottom}\n    >\n      <Row noMargin>\n        <Cell columns={12}>\n          <Heading scale=\"level-2\" textAlign=\"center\" margin=\"xl 0\">\n            {title}\n          </Heading>\n        </Cell>\n      </Row>\n      <CustomSection paddingTop=\"sm\">\n        <StyledPaddedSection>\n          <Row noMargin>{profileColumns}</Row>\n        </StyledPaddedSection>\n      </CustomSection>\n    </CustomSection>\n  );\n};\n"],"file":"index.js"}