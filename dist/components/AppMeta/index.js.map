{"version":3,"sources":["../../../src/components/AppMeta/index.tsx"],"names":["React","useContext","Helmet","GraphCmsInstanceContext","MAX_LENGTH_OG_DESCRIPTION","AppMeta","title","description","generator","keywords","canonical","imageUrl","prev","next","type","preconnectLinkList","prefetchLinkList","additionalMetas","includeProductInTitle","productName","children","instance","additionalMeta","map","meta","index","key","toString","isRobotsInAdditionalMeta","find","item","name","push","content","titleTemplate","property","slice","trim","links","rel","href","link","favicon","url","sizes","lang","entry"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  GraphCmsInstanceContext,\n  InstanceContextTypes,\n} from '@/context/instance';\nimport { AppMetaProps, AdditionalMeta } from './AppMeta.interface';\n\nconst MAX_LENGTH_OG_DESCRIPTION = 127;\n\nexport const AppMeta: React.FC<AppMetaProps> = ({\n  title = '',\n  description = '',\n  generator = 'webmobile-landing-pages',\n  keywords,\n  canonical = '',\n  imageUrl = '',\n  prev,\n  next,\n  type = 'webpage',\n  preconnectLinkList = [],\n  prefetchLinkList = [],\n  additionalMetas = [],\n  includeProductInTitle = true,\n  productName = '',\n  children,\n}) => {\n  const { instance } = useContext<InstanceContextTypes>(\n    GraphCmsInstanceContext\n  );\n\n  const additionalMeta: AdditionalMeta[] = additionalMetas.map(\n    (meta, index) => ({\n      key: index.toString(),\n      ...meta,\n    })\n  );\n\n  const isRobotsInAdditionalMeta = additionalMeta.find(\n    item => item.name === 'robots'\n  );\n\n  !isRobotsInAdditionalMeta &&\n    additionalMeta.push({ name: 'robots', content: 'follow' });\n\n  const titleTemplate = includeProductInTitle ? `%s | ${productName}` : '%s';\n\n  const meta: AdditionalMeta[] = [\n    { name: 'description', content: description || '' },\n    { name: 'keywords', content: [...(keywords || [])] },\n    { name: 'generator', content: generator },\n    { property: 'og:title', content: title || '' },\n    {\n      property: 'og:description',\n      content: (description || '').slice(0, MAX_LENGTH_OG_DESCRIPTION).trim(),\n    },\n    { property: 'og:type', content: type },\n    { property: 'og:image', content: imageUrl },\n    { property: 'og:site_name', content: productName },\n    { property: 'og:url', content: canonical },\n    ...additionalMeta,\n  ];\n\n  const links = [\n    ...(canonical ? [{ rel: 'canonical', href: canonical }] : []),\n    ...(prev ? [{ rel: 'prev', href: prev }] : []),\n    ...(next ? [{ rel: 'next', href: next }] : []),\n    ...preconnectLinkList.map(link => ({ rel: 'preconnect', href: link })),\n    ...prefetchLinkList.map(link => ({\n      rel: 'preconnect dns-prefetch',\n      href: link,\n    })),\n    ...(instance?.favicon\n      ? [\n          {\n            rel: 'icon',\n            href: instance?.favicon.url,\n            type: 'image/png',\n            sizes: '16x16',\n          },\n        ]\n      : []),\n  ];\n\n  return (\n    <Helmet\n      titleTemplate={titleTemplate}\n      defaultTitle={title}\n      htmlAttributes={{ lang: 'en-GB' }}\n      link={\n        instance?.favicon\n          ? [\n              {\n                rel: 'icon',\n                type: 'image/png',\n                href: instance?.favicon.url,\n                sizes: '16x16',\n              },\n            ]\n          : []\n      }\n    >\n      {meta.map((entry, index) => {\n        return <meta key={index} {...entry} />;\n      })}\n      {links.map((entry, index) => {\n        return <link key={index} {...entry} />;\n      })}\n      <title>{title}</title>\n      {children}\n    </Helmet>\n  );\n};\n\nexport * from './AppMeta.interface';\n"],"file":"index.js"}