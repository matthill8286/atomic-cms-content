{"version":3,"sources":["../../../src/components/AppMeta/index.tsx"],"names":["React","Helmet","MAX_LENGTH_OG_DESCRIPTION","AppMeta","title","description","generator","keywords","canonical","imageUrl","prev","next","type","preconnectLinkList","prefetchLinkList","additionalMetas","includeProductInTitle","productName","children","additionalMeta","map","meta","index","key","toString","isRobotsInAdditionalMeta","find","item","name","push","content","titleTemplate","property","slice","trim","links","rel","href","link","lang","entry"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,cAAc,qBAAd;AAEA,IAAMC,yBAAyB,GAAG,GAAlC;AAEA,OAAO,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAgBzC;AAAA,wBAfJC,KAeI;AAAA,MAfJA,KAeI,2BAfI,UAeJ;AAAA,8BAdJC,WAcI;AAAA,MAdJA,WAcI,iCAdU,EAcV;AAAA,4BAbJC,SAaI;AAAA,MAbJA,SAaI,+BAbQ,yBAaR;AAAA,2BAZJC,QAYI;AAAA,MAZJA,QAYI,8BAZO,EAYP;AAAA,4BAXJC,SAWI;AAAA,MAXJA,SAWI,+BAXQ,EAWR;AAAA,2BAVJC,QAUI;AAAA,MAVJA,QAUI,8BAVO,EAUP;AAAA,MATJC,IASI,QATJA,IASI;AAAA,MARJC,IAQI,QARJA,IAQI;AAAA,uBAPJC,IAOI;AAAA,MAPJA,IAOI,0BAPG,SAOH;AAAA,mCANJC,kBAMI;AAAA,MANJA,kBAMI,sCANiB,EAMjB;AAAA,mCALJC,gBAKI;AAAA,MALJA,gBAKI,sCALe,EAKf;AAAA,kCAJJC,eAII;AAAA,MAJJA,eAII,qCAJc,EAId;AAAA,mCAHJC,qBAGI;AAAA,MAHJA,qBAGI,sCAHoB,IAGpB;AAAA,8BAFJC,WAEI;AAAA,MAFJA,WAEI,iCAFU,EAEV;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,cAAgC,GAAGJ,eAAe,CAACK,GAAhB,CAAoB,UAACC,IAAD,EAAOC,KAAP;AAAA;AAC3DC,MAAAA,GAAG,EAAED,KAAK,CAACE,QAAN;AADsD,OAExDH,IAFwD;AAAA,GAApB,CAAzC;AAKA,MAAMI,wBAAwB,GAAGN,cAAc,CAACO,IAAf,CAAoB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,KAAc,QAAlB;AAAA,GAAxB,CAAjC;AAEA,GAACH,wBAAD,IAA6BN,cAAc,CAACU,IAAf,CAAoB;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBE,IAAAA,OAAO,EAAE;AAA3B,GAApB,CAA7B;AAEA,MAAMC,aAAa,GAAGf,qBAAqB,kBAAWC,WAAX,IAA2B,IAAtE;AAEA,MAAMI,IAAsB,IAC1B;AAAEO,IAAAA,IAAI,EAAE,aAAR;AAAuBE,IAAAA,OAAO,EAAEzB,WAAW,IAAI;AAA/C,GAD0B,EAE1B;AAAEuB,IAAAA,IAAI,EAAE,UAAR;AAAoBE,IAAAA,OAAO,EAAEvB;AAA7B,GAF0B,EAG1B;AAAEqB,IAAAA,IAAI,EAAE,WAAR;AAAqBE,IAAAA,OAAO,EAAExB;AAA9B,GAH0B,EAI1B;AAAE0B,IAAAA,QAAQ,EAAE,UAAZ;AAAwBF,IAAAA,OAAO,EAAE1B;AAAjC,GAJ0B,EAK1B;AACE4B,IAAAA,QAAQ,EAAE,gBADZ;AAEEF,IAAAA,OAAO,EAAE,CAACzB,WAAW,IAAI,EAAhB,EAAoB4B,KAApB,CAA0B,CAA1B,EAA6B/B,yBAA7B,EAAwDgC,IAAxD;AAFX,GAL0B,EAS1B;AAAEF,IAAAA,QAAQ,EAAE,SAAZ;AAAuBF,IAAAA,OAAO,EAAElB;AAAhC,GAT0B,EAU1B;AAAEoB,IAAAA,QAAQ,EAAE,UAAZ;AAAwBF,IAAAA,OAAO,EAAErB;AAAjC,GAV0B,EAW1B;AAAEuB,IAAAA,QAAQ,EAAE,cAAZ;AAA4BF,IAAAA,OAAO,EAAEb;AAArC,GAX0B,EAY1B;AAAEe,IAAAA,QAAQ,EAAE,QAAZ;AAAsBF,IAAAA,OAAO,EAAEtB;AAA/B,GAZ0B,4BAavBW,cAbuB,EAA5B;AAgBA,MAAMgB,KAAK,gCACL3B,SAAS,GAAG,CAAC;AAAE4B,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,IAAI,EAAE7B;AAA1B,GAAD,CAAH,GAA6C,EADjD,sBAELE,IAAI,GAAG,CAAC;AAAE0B,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE3B;AAArB,GAAD,CAAH,GAAmC,EAFlC,sBAGLC,IAAI,GAAG,CAAC;AAAEyB,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE1B;AAArB,GAAD,CAAH,GAAmC,EAHlC,sBAINE,kBAAkB,CAACO,GAAnB,CAAuB,UAAAkB,IAAI;AAAA,WAAK;AAAEF,MAAAA,GAAG,EAAE,YAAP;AAAqBC,MAAAA,IAAI,EAAEC;AAA3B,KAAL;AAAA,GAA3B,CAJM,sBAKNxB,gBAAgB,CAACM,GAAjB,CAAqB,UAAAkB,IAAI;AAAA,WAAK;AAC/BF,MAAAA,GAAG,EAAE,yBAD0B;AAE/BC,MAAAA,IAAI,EAAEC;AAFyB,KAAL;AAAA,GAAzB,CALM,EAAX;AAWA,SACE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAEP,aAAvB;AAAsC,IAAA,YAAY,EAAE3B,KAApD;AAA2D,IAAA,cAAc,EAAE;AAAEmC,MAAAA,IAAI,EAAE;AAAR;AAA3E,KACGlB,IAAI,CAACD,GAAL,CAAS,UAACoB,KAAD,EAAQlB,KAAR,EAAkB;AAE1B,WAAO;AAAM,MAAA,GAAG,EAAEA;AAAX,OAAsBkB,KAAtB,EAAP;AACD,GAHA,CADH,EAKGL,KAAK,CAACf,GAAN,CAAU,UAACoB,KAAD,EAAQlB,KAAR,EAAkB;AAC3B,WAAO;AAAM,MAAA,GAAG,EAAEA;AAAX,OAAsBkB,KAAtB,EAAP;AACD,GAFA,CALH,EAQE,mCAAQpC,KAAR,CARF,EASGc,QATH,CADF;AAaD,CApEM","sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { AppMetaProps, AdditionalMeta } from './AppMeta.interface'\nexport * from './AppMeta.interface'\n\nconst MAX_LENGTH_OG_DESCRIPTION = 127\n\nexport const AppMeta: React.FC<AppMetaProps> = ({\n  title = 'homepage',\n  description = '',\n  generator = 'webmobile-landing-pages',\n  keywords = [],\n  canonical = '',\n  imageUrl = '',\n  prev,\n  next,\n  type = 'webpage',\n  preconnectLinkList = [],\n  prefetchLinkList = [],\n  additionalMetas = [],\n  includeProductInTitle = true,\n  productName = '',\n  children,\n}) => {\n  const additionalMeta: AdditionalMeta[] = additionalMetas.map((meta, index) => ({\n    key: index.toString(),\n    ...meta,\n  }))\n\n  const isRobotsInAdditionalMeta = additionalMeta.find(item => item.name === 'robots')\n\n  !isRobotsInAdditionalMeta && additionalMeta.push({ name: 'robots', content: 'follow' })\n\n  const titleTemplate = includeProductInTitle ? `%s | ${productName}` : '%s'\n\n  const meta: AdditionalMeta[] = [\n    { name: 'description', content: description || '' },\n    { name: 'keywords', content: keywords },\n    { name: 'generator', content: generator },\n    { property: 'og:title', content: title },\n    {\n      property: 'og:description',\n      content: (description || '').slice(0, MAX_LENGTH_OG_DESCRIPTION).trim(),\n    },\n    { property: 'og:type', content: type },\n    { property: 'og:image', content: imageUrl },\n    { property: 'og:site_name', content: productName },\n    { property: 'og:url', content: canonical },\n    ...additionalMeta,\n  ]\n\n  const links = [\n    ...(canonical ? [{ rel: 'canonical', href: canonical }] : []),\n    ...(prev ? [{ rel: 'prev', href: prev }] : []),\n    ...(next ? [{ rel: 'next', href: next }] : []),\n    ...preconnectLinkList.map(link => ({ rel: 'preconnect', href: link })),\n    ...prefetchLinkList.map(link => ({\n      rel: 'preconnect dns-prefetch',\n      href: link,\n    })),\n  ]\n\n  return (\n    <Helmet titleTemplate={titleTemplate} defaultTitle={title} htmlAttributes={{ lang: 'en-GB' }}>\n      {meta.map((entry, index) => {\n        // @ts-ignore\n        return <meta key={index} {...entry} />\n      })}\n      {links.map((entry, index) => {\n        return <link key={index} {...entry} />\n      })}\n      <title>{title}</title>\n      {children}\n    </Helmet>\n  )\n}\n"],"file":"index.js"}