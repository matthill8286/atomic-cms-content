{"version":3,"sources":["../../../src/components/ScrollSnapSlider/ScrollSnapSlider.story.tsx"],"names":["React","Badge","Picture","ScrollSnapSlider","pictureEntries","withVideoEntries","badges","id","name","renderWithPictureComponent","item","index","assetID","url","renderWithPictureOrVideoComponent","usageType","SlideSettings","mobileSmall","mobileBig","tablet","desktop","title","component","argTypes","slidesPerPageSettings","Template","args","children","TemplateWithBadge","Default","bind","map","withVideo","withBadges"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAgCC,KAAhC,EAAuCC,OAAvC,QAAsD,yBAAtD;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,yBAAjD;AAEA,IAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADa,EAKb;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALa,CAAf;;AAWA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAClD,SACE;AAAS,IAAA,GAAG,EAAED,IAAI,CAACE,OAAL,GAAeD;AAA7B,KACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAC,MAA7B;AAAoC,IAAA,GAAG,EAAED,IAAI,CAACG,GAA9C;AAAmD,IAAA,GAAG,EAAEH,IAAI,CAACE;AAA7D,IADF,CADF;AAKD,CAND;;AAQA,IAAME,iCAAiC,GAAG,SAApCA,iCAAoC,CAACJ,IAAD,EAAOC,KAAP,EAAiB;AACzD,MAAID,IAAI,CAACK,SAAL,KAAmB,eAAvB,EAAwC;AACtC;AACD;;AACD,SAAON,0BAA0B,CAACC,IAAD,EAAOC,KAAP,CAAjC;AACD,CALD;;AAQA,IAAMK,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,CADO;AAEpBC,EAAAA,SAAS,EAAE,CAFS;AAGpBC,EAAAA,MAAM,EAAE,CAHY;AAIpBC,EAAAA,OAAO,EAAE;AAJW,CAAtB;AAOA,eAAe;AACbC,EAAAA,KAAK,EAAE,gCADM;AAEbC,EAAAA,SAAS,EAAEnB,gBAFE;AAGboB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,EAAER;AADf;AAHG,CAAf;;AAQA,IAAMS,QAAsC,GAAG,SAAzCA,QAAyC,CAACC,IAAD;AAAA,SAC7C,oBAAC,gBAAD,EAAsBA,IAAtB,EAA6BA,IAAI,CAACC,QAAlC,CAD6C;AAAA,CAA/C;;AAIA,IAAMC,iBAA+C,GAAG,SAAlDA,iBAAkD,CAACF,IAAD;AAAA,SACtD,iCACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEpB;AAAf,IADF,EAEE,oBAAC,gBAAD,EAAsBoB,IAAtB,EAA6BA,IAAI,CAACC,QAAlC,CAFF,CADsD;AAAA,CAAxD;;AAOA,OAAO,IAAME,OAAO,GAAGJ,QAAQ,CAACK,IAAT,CAAc,EAAd,CAAhB;AAEPD,OAAO,CAACH,IAAR,GAAe;AACbF,EAAAA,qBAAqB,EAAE;AAAEP,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,SAAS,EAAE,CAA7B;AAAgCC,IAAAA,MAAM,EAAE,CAAxC;AAA2CC,IAAAA,OAAO,EAAE;AAApD,GADV;AAEbO,EAAAA,QAAQ,EAAEvB,cAAc,CAAC2B,GAAf,CAAmB,UAACrB,IAAD,EAAOC,KAAP;AAAA,WAAiBF,0BAA0B,CAACC,IAAD,EAAOC,KAAP,CAA3C;AAAA,GAAnB;AAFG,CAAf;AAKA,OAAO,IAAMqB,SAAS,GAAGP,QAAQ,CAACK,IAAT,CAAc,EAAd,CAAlB;AAEPE,SAAS,CAACN,IAAV,GAAiB;AACfF,EAAAA,qBAAqB,EAAE;AAAEP,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,SAAS,EAAE,CAA7B;AAAgCC,IAAAA,MAAM,EAAE,CAAxC;AAA2CC,IAAAA,OAAO,EAAE;AAApD,GADR;AAEfO,EAAAA,QAAQ,EAAEtB,gBAAgB,CAAC0B,GAAjB,CAAqB,UAACrB,IAAD,EAAOC,KAAP;AAAA,WAAiBG,iCAAiC,CAACJ,IAAD,EAAOC,KAAP,CAAlD;AAAA,GAArB;AAFK,CAAjB;AAKA,OAAO,IAAMsB,UAAU,GAAGL,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,CAAnB;AAEPG,UAAU,CAACP,IAAX,GAAkB;AAChBF,EAAAA,qBAAqB,EAAE;AAAEP,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,SAAS,EAAE,CAA7B;AAAgCC,IAAAA,MAAM,EAAE,CAAxC;AAA2CC,IAAAA,OAAO,EAAE;AAApD,GADP;AAEhBO,EAAAA,QAAQ,EAAEtB,gBAAgB,CAAC0B,GAAjB,CAAqB,UAACrB,IAAD,EAAOC,KAAP;AAAA,WAAiBG,iCAAiC,CAACJ,IAAD,EAAOC,KAAP,CAAlD;AAAA,GAArB;AAFM,CAAlB","sourcesContent":["import { Meta, Story } from '@storybook/react'\nimport React from 'react'\nimport { ScrollSnapSliderProps, Badge, Picture } from '@matthill8286/atomic-ui'\nimport { ScrollSnapSlider } from './ScrollSnapSlider'\nimport { pictureEntries, withVideoEntries } from './ScrollSnapSlider.data'\n\nconst badges = [\n  {\n    id: 1,\n    name: 'Sponsored',\n  },\n  {\n    id: 2,\n    name: 'Featured',\n  },\n]\n\nconst renderWithPictureComponent = (item, index) => {\n  return (\n    <article key={item.assetID + index}>\n      <Picture height=\"100%\" width=\"100%\" src={item.url} alt={item.assetID} />\n    </article>\n  )\n}\n\nconst renderWithPictureOrVideoComponent = (item, index) => {\n  if (item.usageType === 'Product Video') {\n    return `Investigate Video Player`\n  }\n  return renderWithPictureComponent(item, index)\n}\n\n// can be used when the slide width is dynamic or only 1 slide should be shown\nconst SlideSettings = {\n  mobileSmall: 1,\n  mobileBig: 2,\n  tablet: 2,\n  desktop: 3,\n}\n\nexport default {\n  title: 'Design System/ScrollSnapSlider',\n  component: ScrollSnapSlider,\n  argTypes: {\n    slidesPerPageSettings: SlideSettings,\n  },\n} as Meta\n\nconst Template: Story<ScrollSnapSliderProps> = (args: ScrollSnapSliderProps) => (\n  <ScrollSnapSlider {...args}>{args.children}</ScrollSnapSlider>\n)\n\nconst TemplateWithBadge: Story<ScrollSnapSliderProps> = (args: ScrollSnapSliderProps) => (\n  <div>\n    <Badge badges={badges} />\n    <ScrollSnapSlider {...args}>{args.children}</ScrollSnapSlider>\n  </div>\n)\n\nexport const Default = Template.bind({})\n\nDefault.args = {\n  slidesPerPageSettings: { mobileSmall: 1, mobileBig: 2, tablet: 2, desktop: 3 },\n  children: pictureEntries.map((item, index) => renderWithPictureComponent(item, index)),\n}\n\nexport const withVideo = Template.bind({})\n\nwithVideo.args = {\n  slidesPerPageSettings: { mobileSmall: 1, mobileBig: 2, tablet: 2, desktop: 3 },\n  children: withVideoEntries.map((item, index) => renderWithPictureOrVideoComponent(item, index)),\n}\n\nexport const withBadges = TemplateWithBadge.bind({})\n\nwithBadges.args = {\n  slidesPerPageSettings: { mobileSmall: 1, mobileBig: 2, tablet: 2, desktop: 3 },\n  children: withVideoEntries.map((item, index) => renderWithPictureOrVideoComponent(item, index)),\n}\n"],"file":"ScrollSnapSlider.story.js"}