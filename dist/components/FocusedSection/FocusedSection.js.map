{"version":3,"sources":["../../../src/components/FocusedSection/FocusedSection.tsx"],"names":["React","useHistory","Row","Cell","styled","AssetMeta","Heading","Grid","ConfigurableGraphCmsHtmlSerializer","Serializer","CustomSection","ProfileTileRows","DescriptionWrapper","div","theme","spacing","base","md","lg","FocusedSection","title","description","profileSections","profileTitle","profileBrandedLabel","learningAssetMeta","sectionColor","paddingTop","paddingBottom","eventDateLabel","typeLabel","lengthLabel","providerLabel","staticEventDateValue","staticTypeValue","staticProviderValue","staticLengthValue","staticCompetencyValue","launchButtonLabel","customExternalUrl","location","handleLaunching","window","open","raw","label","value","state","embeddedAsset"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {\n  Row,\n  Cell,\n  styled,\n  AssetMeta,\n  Heading,\n  Grid,\n} from '@matthill8286/atomic-ui';\nimport {ConfigurableGraphCmsHtmlSerializer, Serializer} from '../Serializer';\nimport {CustomSection} from '../CustomSection';\nimport {ProfileTileRows} from '../ProfileTileRows';\nimport {FocusedSectionInterface} from './FocusedSection.interface';\n\nexport const DescriptionWrapper = styled.div`\n  margin: ${({theme}) =>\n    `${theme.spacing.base.md} 0 ${theme.spacing.base.lg} 0`};\n`;\n\nexport const FocusedSection: FC<FocusedSectionInterface> = ({\n  title,\n  description,\n  profileSections,\n  profileTitle,\n  profileBrandedLabel,\n  learningAssetMeta,\n  sectionColor,\n  paddingTop,\n  paddingBottom,\n}) => {\n  const {\n    eventDateLabel,\n    typeLabel,\n    lengthLabel,\n    providerLabel,\n    staticEventDateValue,\n    staticTypeValue,\n    staticProviderValue,\n    staticLengthValue,\n    staticCompetencyValue,\n    launchButtonLabel,\n    customExternalUrl,\n  } = learningAssetMeta;\n\n  const {location} = useHistory();\n\n  const handleLaunching = () => {\n    if (!customExternalUrl) {\n      return null;\n    }\n\n    window.open(customExternalUrl, '_blank');\n  };\n\n  return (\n    <CustomSection\n      color={sectionColor}\n      paddingTop={paddingTop}\n      paddingBottom={paddingBottom}\n    >\n      <Grid>\n        <Row>\n          <Cell columns={12}>\n            <Heading scale=\"level-2\" bold textAlign=\"left\" margin=\"xxl 0 0\">\n              {title}\n            </Heading>\n          </Cell>\n        </Row>\n        <Row noMargin>\n          <Cell columns={8} colsSm={8}>\n            <DescriptionWrapper>\n              {Serializer(\n                description?.raw,\n                ConfigurableGraphCmsHtmlSerializer({})\n              )}\n            </DescriptionWrapper>\n            <ProfileTileRows\n              profileSections={profileSections}\n              sectionColor=\"clear\"\n              title={profileTitle}\n              label={profileBrandedLabel}\n            />\n          </Cell>\n          <Cell columns={4} colsSm={8}>\n            <AssetMeta\n              list={[\n                {label: providerLabel, value: staticProviderValue},\n                {label: eventDateLabel, value: staticEventDateValue},\n                {label: typeLabel, value: staticTypeValue},\n                {label: lengthLabel, value: staticLengthValue},\n              ]}\n              buttonTextLaunch={launchButtonLabel}\n              hideLaunched={location?.state?.embeddedAsset ?? false}\n              isLandingPage\n              launchHandler={handleLaunching}\n              competencyCopy={staticCompetencyValue}\n              isCreatePlaylistInteraction={false}\n              isBookmarkInteraction={false}\n              isShareInteraction={false}\n              tags={[]}\n            />\n          </Cell>\n        </Row>\n      </Grid>\n    </CustomSection>\n  );\n};\n"],"file":"FocusedSection.js"}