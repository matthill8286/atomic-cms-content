{"version":3,"sources":["../../../src/components/Serializer/RichTextHtmlSerializer.test.tsx"],"names":["React","CopyText","Heading","Link","Picture","mountWithTheme","getHeadline","getParagraph","getStrongParagraph","getEmParagraph","getUrlParagraph","getImage","ConfigurableGraphCmsHtmlSerializer","Serializer","renderWrapper","richTextList","xdescribe","it","wrapper","expect","find","toHaveLength","prop","toEqual","todo","at","toBeTruthy","toBeFalsy"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CopyText,\n  Heading,\n  Link,\n  Picture,\n  mountWithTheme,\n} from '@matthill8286/atomic-ui';\nimport {\n  getHeadline,\n  getParagraph,\n  getStrongParagraph,\n  getEmParagraph,\n  getUrlParagraph,\n  getImage,\n} from './RichTextHtmlSerializer.mock';\nimport {ConfigurableGraphCmsHtmlSerializer} from './ConfigurableGraphCmsHtmlSerializer';\nimport {Serializer} from './HtmlSerializer';\n\nconst renderWrapper = (richTextList = []) => {\n  return mountWithTheme(\n    <>{Serializer(richTextList, ConfigurableGraphCmsHtmlSerializer)}</>\n  );\n};\n\nxdescribe('RichText with Serializer', () => {\n  it('renders h1 element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getHeadline('one', '1')]);\n    expect(wrapper.find(Heading)).toHaveLength(1);\n    expect(wrapper.find(Heading).prop('tag')).toEqual('h1');\n    expect(wrapper.find(Heading).prop('scale')).toEqual('level-1');\n  });\n\n  it('renders h2 element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getHeadline('two', '2')]);\n    expect(wrapper.find(Heading)).toHaveLength(1);\n    expect(wrapper.find(Heading).prop('tag')).toEqual('h2');\n    expect(wrapper.find(Heading).prop('scale')).toEqual('level-2');\n  });\n\n  it('renders h3 element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getHeadline('three', '3')]);\n    expect(wrapper.find(Heading)).toHaveLength(1);\n    expect(wrapper.find(Heading).prop('tag')).toEqual('h3');\n    expect(wrapper.find(Heading).prop('scale')).toEqual('level-3');\n  });\n\n  it('renders h4 element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getHeadline('four', '4')]);\n    expect(wrapper.find(Heading)).toHaveLength(1);\n    expect(wrapper.find(Heading).prop('tag')).toEqual('h4');\n    expect(wrapper.find(Heading).prop('scale')).toEqual('level-4');\n  });\n\n  it('renders h5 element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getHeadline('five', '5')]);\n    expect(wrapper.find(Heading)).toHaveLength(1);\n    expect(wrapper.find(Heading).prop('tag')).toEqual('h5');\n    expect(wrapper.find(Heading).prop('scale')).toEqual('level-4');\n  });\n\n  it('renders h6 element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getHeadline('six', '6')]);\n    expect(wrapper.find(Heading)).toHaveLength(1);\n    expect(wrapper.find(Heading).prop('tag')).toEqual('h6');\n    expect(wrapper.find(Heading).prop('scale')).toEqual('level-4');\n  });\n\n  it('renders p element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getParagraph()]);\n    expect(wrapper.find(CopyText)).toHaveLength(1);\n  });\n\n  it.todo('renders strong element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getStrongParagraph()]);\n    expect(wrapper.find(CopyText)).toHaveLength(2);\n    // Check outer paragraph\n    expect(wrapper.find(CopyText).at(0).prop('withMargins')).toBeTruthy();\n    // Check inner strong paragraph\n    expect(wrapper.find(CopyText).at(1).prop('withMargins')).toBeFalsy();\n    expect(wrapper.find(CopyText).at(1).prop('tag')).toEqual('strong');\n  });\n\n  it.todo('renders em element correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getEmParagraph()]);\n    expect(wrapper.find(CopyText)).toHaveLength(2);\n    // Check outer paragraph\n    expect(wrapper.find(CopyText).at(0).prop('withMargins')).toBeTruthy();\n    // Check inner em paragraph\n    expect(wrapper.find(CopyText).at(1).prop('withMargins')).toBeFalsy();\n    expect(wrapper.find(CopyText).at(1).prop('tag')).toEqual('em');\n  });\n\n  it.todo('renders urls correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getUrlParagraph()]);\n    expect(wrapper.find(Link)).toHaveLength(1);\n    expect(wrapper.find(Link).prop('underline')).toBeTruthy();\n    expect(wrapper.find(Link).prop('href')).toEqual('https://mediamarkt.de');\n  });\n\n  it.todo('renders images correctly', () => {\n    // @ts-expect-error ts-migrate(2322) FIXME: Type 'any' is not assignable to type 'never'.\n    const wrapper = renderWrapper([getImage()]);\n    expect(wrapper.find(Picture)).toHaveLength(1);\n    expect(wrapper.find(Picture).find('img').prop('src')).toBeTruthy();\n    expect(wrapper.find(Picture).find('img').prop('alt')).toEqual('altText');\n    expect(wrapper.find(Picture).find('img').prop('width')).toEqual(1920);\n    expect(wrapper.find(Picture).find('img').prop('height')).toEqual(1080);\n  });\n});\n"],"file":"RichTextHtmlSerializer.test.js"}