{"version":3,"sources":["../../../src/components/TextSection/index.tsx"],"names":["React","Grid","Cell","Row","Offset","Heading","Typo","styled","useMultiViewModalAction","Link","StyledTextSection","CustomSection","Serializer","ConfigurableGraphCmsHtmlSerializer","StyledTypoWrapper","TextSection","richText","title","sectionColor","branded","active","anchorId","textColor","headingColor","headingsBold","paddingTop","paddingBottom","type","setBranding","setActive","setView","undefined","inline","bold","color","fontSize","textAlign","desktop","mobile","e","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Cell,\n  Row,\n  Offset,\n  Heading,\n  Typo,\n  styled,\n  useMultiViewModalAction,\n  Link,\n} from '@matthill8286/atomic-ui';\nimport {TextSectionProps} from './TextSection.types';\nimport {StyledTextSection} from './TextSection.styled';\nimport {CustomSection} from '../CustomSection';\nimport {Serializer, ConfigurableGraphCmsHtmlSerializer} from '../Serializer';\n\nexport * from './TextSection.types';\n\nconst StyledTypoWrapper = styled(Typo)`\n  margin: 24px 0;\n`;\n\nexport const TextSection: React.FC<TextSectionProps> = ({\n  richText,\n  title,\n  sectionColor,\n  branded,\n  active,\n  anchorId,\n  textColor,\n  headingColor,\n  headingsBold,\n  paddingTop,\n  paddingBottom,\n  type = 'Home',\n}) => {\n  const setBranding = branded ? 'white' : 'grey5';\n  const {setActive, setView} = useMultiViewModalAction();\n  return (\n    <CustomSection\n      color={branded ? 'primary' : sectionColor}\n      paddingTop={paddingTop}\n      paddingBottom={paddingBottom}\n    >\n      <Row noMargin>\n        <Cell columns={12} colsSm={8} colsXs={4}>\n          <Heading\n            weight=\"bold\"\n            scale=\"level-2\"\n            textAlign=\"center\"\n            margin=\"xl 0\"\n          >\n            {title}\n          </Heading>\n        </Cell>\n      </Row>\n      <Grid>\n        <Row noMargin>\n          <Offset colsXl={1} colsLg={1} colsMd={0} colsSm={0} colsXs={0} />\n          <Cell colsXl={10} colsLg={10} colsMd={8} colsSm={8} colsXs={4}>\n            <StyledTextSection\n              color={textColor}\n              active={active}\n              id={anchorId ?? undefined}\n            >\n              {Serializer(\n                richText,\n                ConfigurableGraphCmsHtmlSerializer({\n                  inline: true,\n                  bold: headingsBold,\n                  color: setBranding,\n                  fontSize: '17px',\n                  textAlign: branded ? 'center' : 'left',\n                  headingColor: branded ? 'white' : headingColor,\n                })\n              )}\n              {type === 'Policy' && (\n                <>\n                  <Heading scale=\"level-3\" tag=\"h3\" weight=\"semibold\">\n                    Changing cookie settings\n                  </Heading>\n                  <StyledTypoWrapper\n                    tag=\"p\"\n                    fontSize={{\n                      desktop: '17px',\n                      mobile: '15px',\n                    }}\n                    textAlign={branded ? 'center' : 'left'}\n                    color={setBranding}\n                  >\n                    You can manage your cookie preferences{' '}\n                    <Link\n                      href=\"#\"\n                      color=\"primary\"\n                      inline\n                      underline\n                      onClick={e => {\n                        e.preventDefault();\n                        setView('cookie-2');\n                        setActive(true);\n                      }}\n                    >\n                      here\n                    </Link>\n                  </StyledTypoWrapper>\n                </>\n              )}\n            </StyledTextSection>\n          </Cell>\n        </Row>\n      </Grid>\n    </CustomSection>\n  );\n};\n"],"file":"index.js"}