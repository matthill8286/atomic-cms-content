{"version":3,"sources":["../../../src/components/TextSection/index.tsx"],"names":["React","Grid","Cell","Row","Offset","Heading","StyledTextSection","CustomSection","Serializer","ConfigurableGraphCmsHtmlSerializer","TextSection","richText","title","sectionColor","branded","active","anchorId","textColor","headingColor","headingsBold","paddingTop","paddingBottom","withHeading","undefined","raw","inline","bold","color","fontSize","textAlign"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,OAAlC,QAAiD,yBAAjD;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,EAAqBC,kCAArB,QAA+D,eAA/D;AAEA,cAAc,qBAAd;AAEA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAajD;AAAA,MAZJC,QAYI,QAZJA,QAYI;AAAA,MAXJC,KAWI,QAXJA,KAWI;AAAA,MAVJC,YAUI,QAVJA,YAUI;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,MAQI,QARJA,MAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,8BADJC,WACI;AAAA,MADJA,WACI,iCADU,IACV;AACJ,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAER,OAAO,GAAG,SAAH,GAAeD,YAD/B;AAEE,IAAA,UAAU,EAAEO,UAFd;AAGE,IAAA,aAAa,EAAEC;AAHjB,KAIE,oBAAC,IAAD,QACE,oBAAC,GAAD;AAAK,IAAA,QAAQ;AAAb,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,CAAhB;AAAmB,IAAA,MAAM,EAAE,CAA3B;AAA8B,IAAA,MAAM,EAAE,CAAtC;AAAyC,IAAA,MAAM,EAAE,CAAjD;AAAoD,IAAA,MAAM,EAAE;AAA5D,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAE,EAAd;AAAkB,IAAA,MAAM,EAAE,EAA1B;AAA8B,IAAA,MAAM,EAAE,CAAtC;AAAyC,IAAA,MAAM,EAAE,CAAjD;AAAoD,IAAA,MAAM,EAAE;AAA5D,KACGC,WAAW,GACV,oBAAC,OAAD;AACE,IAAA,KAAK,EAAER,OAAO,GAAG,OAAH,GAAaI,YAD7B;AAEE,IAAA,MAAM,EAAEC,YAAY,GAAG,MAAH,GAAY,QAFlC;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,EAAEL,OAAO,GAAG,QAAH,GAAc,MAJlC;AAKE,IAAA,MAAM,EAAC;AALT,KAMGF,KANH,CADU,GASR,IAVN,EAWE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEC,YAA1B;AAAwC,IAAA,MAAM,EAAEE,MAAhD;AAAwD,IAAA,EAAE,EAAEC,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAcO;AAAxE,KACGf,UAAU,CACTG,QAAQ,CAACa,GADA,EAGTf,kCAAkC,CAAC;AACjCgB,IAAAA,MAAM,EAAE,IADyB;AAEjCC,IAAAA,IAAI,EAAEP,YAF2B;AAGjCQ,IAAAA,KAAK,EAAEV,SAH0B;AAIjCW,IAAAA,QAAQ,EAAE,MAJuB;AAKjCC,IAAAA,SAAS,EAAEf,OAAO,GAAG,QAAH,GAAc,MALC;AAMjCI,IAAAA,YAAY,EAAEJ,OAAO,GAAG,OAAH,GAAaI;AAND,GAAD,CAHzB,CADb,CAXF,CAFF,CADF,CAJF,CADF;AAsCD,CApDM","sourcesContent":["import React from 'react'\nimport { Grid, Cell, Row, Offset, Heading } from '@matthill8286/atomic-ui'\nimport { TextSectionProps } from './TextSection.types'\nimport { StyledTextSection } from './TextSection.styled'\nimport { CustomSection } from '../CustomSection'\nimport { Serializer, ConfigurableGraphCmsHtmlSerializer } from '../Serializer'\n\nexport * from './TextSection.types'\n\nexport const TextSection: React.FC<TextSectionProps> = ({\n  richText,\n  title,\n  sectionColor,\n  branded,\n  active,\n  anchorId,\n  textColor,\n  headingColor,\n  headingsBold,\n  paddingTop,\n  paddingBottom,\n  withHeading = true,\n}) => {\n  return (\n    <CustomSection\n      color={branded ? 'primary' : sectionColor}\n      paddingTop={paddingTop}\n      paddingBottom={paddingBottom}>\n      <Grid>\n        <Row noMargin>\n          <Offset colsXl={1} colsLg={1} colsMd={0} colsSm={0} colsXs={0} />\n          <Cell colsXl={10} colsLg={10} colsMd={8} colsSm={8} colsXs={4}>\n            {withHeading ? (\n              <Heading\n                color={branded ? 'white' : headingColor}\n                weight={headingsBold ? 'bold' : 'normal'}\n                scale=\"level-3\"\n                textAlign={branded ? 'center' : 'left'}\n                margin=\"sm 0 xl\">\n                {title}\n              </Heading>\n            ) : null}\n            <StyledTextSection color={sectionColor} active={active} id={anchorId ?? undefined}>\n              {Serializer(\n                richText.raw,\n                // @ts-ignore\n                ConfigurableGraphCmsHtmlSerializer({\n                  inline: true,\n                  bold: headingsBold,\n                  color: textColor,\n                  fontSize: '17px',\n                  textAlign: branded ? 'center' : 'left',\n                  headingColor: branded ? 'white' : headingColor,\n                })\n              )}\n            </StyledTextSection>\n          </Cell>\n        </Row>\n      </Grid>\n    </CustomSection>\n  )\n}\n"],"file":"index.js"}