{"version":3,"sources":["../../../src/components/ErrorBoundary/index.tsx"],"names":["React","Component","ErrorPage","Error","ErrorPageType","ErrorBoundary","props","state","error","undefined","errorInfo","errorTrackingObj","errorTitle","message","errorCode","requestUrl","window","location","pathname","requestedId","pageType","setState","Fallback","TECHNICAL_ERROR","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,SAASC,SAAS,IAAIC,KAAtB,EAA6BC,aAA7B,QAAkD,UAAlD;;IAIMC,a;;;;;AACJ,yBAAYC,KAAZ,EAA+B;AAAA;;AAAA;;AAC7B,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEC,SADI;AAEXC,MAAAA,SAAS,EAAED,SAFA;AAGXE,MAAAA,gBAAgB,EAAEF;AAHP,KAAb;AAF6B;AAO9B;;;;WAED,2BAAkBD,KAAlB,EAAgCE,SAAhC,EAAsD;AACpD,UAAMC,gBAAgB,GAAG;AACvBC,QAAAA,UAAU,EAAEJ,KAAK,CAACK,OADK;AAEvBC,QAAAA,SAAS,EAAE,GAFY;AAGvBC,QAAAA,UAAU,EAAEC,MAAM,CAACC,QAAP,CAAgBC,QAHL;AAIvBC,QAAAA,WAAW,EAAE,KAAKb,KAAL,CAAWa,WAJD;AAKvBC,QAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWc;AALE,OAAzB;AAQA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAALA,KAAF;AAASE,QAAAA,SAAS,EAATA,SAAT;AAAoBC,QAAAA,gBAAgB,EAAhBA;AAApB,OAAd;AACD;;;WAED,kBAAS;AACP,UAAQW,QAAR,GAAqB,KAAKhB,KAA1B,CAAQgB,QAAR;;AAEA,UAAI,KAAKf,KAAL,CAAWC,KAAf,EAAsB;AACpB,YAAIc,QAAJ,EAAc;AACZ,iBAAO,oBAAC,QAAD,OAAP;AACD,SAFD,MAEO;AACL,iBAAO,oBAAC,KAAD;AAAO,YAAA,SAAS,EAAElB,aAAa,CAACmB;AAAhC,YAAP;AACD;AACF;;AAED,aAAO,KAAKjB,KAAL,CAAWkB,QAAlB;AACD;;;;EAlCyBvB,S;;AAqC5B,SAASI,aAAT","sourcesContent":["import React, { Component, ErrorInfo } from 'react'\nimport { ErrorPage as Error, ErrorPageType } from '../Error'\nimport { ErrorProps, ErrorState } from './ErrorBoundary.interface'\n\n// Error boundaries need to be classes, therefore no FC\nclass ErrorBoundary extends Component<ErrorProps, ErrorState> {\n  constructor(props: ErrorProps) {\n    super(props)\n    this.state = {\n      error: undefined,\n      errorInfo: undefined,\n      errorTrackingObj: undefined,\n    }\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    const errorTrackingObj = {\n      errorTitle: error.message,\n      errorCode: 500,\n      requestUrl: window.location.pathname,\n      requestedId: this.props.requestedId,\n      pageType: this.props.pageType,\n    }\n\n    this.setState({ error, errorInfo, errorTrackingObj })\n  }\n\n  render() {\n    const { Fallback } = this.props\n\n    if (this.state.error) {\n      if (Fallback) {\n        return <Fallback />\n      } else {\n        return <Error errorType={ErrorPageType.TECHNICAL_ERROR} />\n      }\n    }\n\n    return this.props.children\n  }\n}\n\nexport { ErrorBoundary }\n"],"file":"index.js"}