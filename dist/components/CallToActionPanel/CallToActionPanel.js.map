{"version":3,"sources":["../../../src/components/CallToActionPanel/CallToActionPanel.tsx"],"names":["React","Grid","Cell","Row","CallToActionPanel","CustomSection","formatToStaticAsset","useHistory","orientation","right","left","CmsCallToActionPanel","element","children","image","svg","withLQIP","showReadMore","showMore","showFeatured","asset","isOpenAsset","rightOrientation","onAssetClick","sectionColor","routeContext","richTextCopy","formatAsset","history","to","push","pathname","state","embeddedAsset"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\nimport {\n  Grid,\n  Cell,\n  Row,\n  ThemeColors,\n  CallToActionPanel,\n  CallToActionPanelProps,\n  Asset,\n} from '@matthill8286/atomic-ui';\nimport {CustomSection} from '../CustomSection';\nimport {formatToStaticAsset} from '../../helpers';\nimport {useHistory} from 'react-router-dom';\n\nexport type SelectableOrientation = 'left' | 'right';\n\nconst orientation: {[key in SelectableOrientation]: SelectableOrientation} = {\n  right: 'right',\n  left: 'left',\n};\n\nexport interface PublicCallToActionPanelProps\n  extends Omit<CallToActionPanelProps, 'alignment'> {\n  sectionColor?: ThemeColors;\n  rightOrientation?: boolean;\n  routeContext?: string;\n  shoeFeatured?: boolean;\n  isOpenAsset?: boolean;\n  richTextCopy?: string | React.ReactNode;\n}\n\nexport const CmsCallToActionPanel: FC<PublicCallToActionPanelProps> = ({\n  element,\n  children,\n  image,\n  svg,\n  withLQIP = false,\n  showReadMore,\n  showMore,\n  showFeatured,\n  asset,\n  isOpenAsset,\n  rightOrientation,\n  onAssetClick,\n  sectionColor,\n  routeContext,\n  richTextCopy,\n}): JSX.Element => {\n  const formatAsset = asset ? formatToStaticAsset([{...asset}]) : null;\n  const history = useHistory();\n  return (\n    <CustomSection color={sectionColor} paddingTop={0} paddingBottom={0}>\n      <Grid>\n        <Row noMargin>\n          <Cell colsXl={12} colsLg={12} colsMd={8} colsSm={8} colsXs={4}>\n            <CallToActionPanel\n              image={image}\n              withLQIP={withLQIP}\n              showReadMore={showReadMore}\n              showMore={showMore}\n              showFeatured={showFeatured}\n              isOpenAsset={isOpenAsset}\n              element={element}\n              richTextCopy={richTextCopy}\n              asset={formatAsset?.[0] ?? null}\n              onAssetClick={() => {\n                if (asset?.to) {\n                  history.push({\n                    pathname: asset?.to,\n                    // @ts-ignore\n                    state: {embeddedAsset: asset.embeddedAsset},\n                  });\n                }\n\n                return null;\n              }}\n              alignment={\n                rightOrientation ? orientation.right : orientation.left\n              }\n            />\n          </Cell>\n        </Row>\n      </Grid>\n    </CustomSection>\n  );\n};\n"],"file":"CallToActionPanel.js"}