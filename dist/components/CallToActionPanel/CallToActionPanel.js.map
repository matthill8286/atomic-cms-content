{"version":3,"sources":["../../../src/components/CallToActionPanel/CallToActionPanel.tsx"],"names":["React","Grid","Cell","Row","CallToActionPanel","CustomSection","orientation","right","left","CmsCallToActionPanel","element","children","image","withLQIP","showReadMore","showMore","showFeatured","rightOrientation","sectionColor","richTextCopy"],"mappings":"AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,GAHF,EAKEC,iBALF,QAOO,yBAPP;AAQA,SAASC,aAAT,QAA8B,kBAA9B;AAMA,IAAMC,WAAsE,GAAG;AAC7EC,EAAAA,KAAK,EAAE,OADsE;AAE7EC,EAAAA,IAAI,EAAE;AAFuE,CAA/E;AAcA,OAAO,IAAMC,oBAAsD,GAAG,SAAzDA,oBAAyD,OAWnD;AAAA,MAVjBC,OAUiB,QAVjBA,OAUiB;AAAA,MATjBC,QASiB,QATjBA,QASiB;AAAA,MARjBC,KAQiB,QARjBA,KAQiB;AAAA,2BAPjBC,QAOiB;AAAA,MAPjBA,QAOiB,8BAPN,KAOM;AAAA,MANjBC,YAMiB,QANjBA,YAMiB;AAAA,MALjBC,QAKiB,QALjBA,QAKiB;AAAA,MAJjBC,YAIiB,QAJjBA,YAIiB;AAAA,MAHjBC,gBAGiB,QAHjBA,gBAGiB;AAAA,MAFjBC,YAEiB,QAFjBA,YAEiB;AAAA,MADjBC,YACiB,QADjBA,YACiB;AACjB,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAED,YAAtB;AAAoC,IAAA,UAAU,EAAE,CAAhD;AAAmD,IAAA,aAAa,EAAE;AAAlE,KACE,oBAAC,IAAD,QACE,oBAAC,GAAD;AAAK,IAAA,QAAQ;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAE,EAAd;AAAkB,IAAA,MAAM,EAAE,EAA1B;AAA8B,IAAA,MAAM,EAAE,CAAtC;AAAyC,IAAA,MAAM,EAAE,CAAjD;AAAoD,IAAA,MAAM,EAAE;AAA5D,KACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,YAAY,EAAEC,YALhB;AAME,IAAA,OAAO,EAAEN,OANX;AAOE,IAAA,YAAY,EAAES,YAPhB;AAQE,IAAA,SAAS,EAAEF,gBAAgB,GAAGX,WAAW,CAACC,KAAf,GAAuBD,WAAW,CAACE;AARhE,IADF,EAWGG,QAXH,CADF,CADF,CADF,CADF;AAqBD,CAjCM","sourcesContent":["import React, { FC } from 'react'\nimport {\n  Grid,\n  Cell,\n  Row,\n  ThemeColors,\n  CallToActionPanel,\n  CallToActionPanelProps,\n} from '@matthill8286/atomic-ui'\nimport { CustomSection } from '../CustomSection'\nimport { ConfigurableGraphCmsHtmlSerializer, Serializer } from '../Serializer'\nimport { Elements, RichTextRawDocument } from '../../types/richtext'\n\nexport type SelectableOrientation = 'left' | 'right'\n\nconst orientation: { [key in SelectableOrientation]: SelectableOrientation } = {\n  right: 'right',\n  left: 'left',\n}\n\nexport interface PublicCallToActionPanelProps extends Omit<CallToActionPanelProps, 'alignment'> {\n  sectionColor?: ThemeColors\n  rightOrientation?: boolean\n  routeContext?: string\n  shoeFeatured?: boolean\n  isOpenProduct?: boolean\n  richTextCopy?: RichTextRawDocument | null\n}\n\nexport const CmsCallToActionPanel: FC<PublicCallToActionPanelProps> = ({\n  element,\n  children,\n  image,\n  withLQIP = false,\n  showReadMore,\n  showMore,\n  showFeatured,\n  rightOrientation,\n  sectionColor,\n  richTextCopy,\n}): JSX.Element => {\n  return (\n    <CustomSection color={sectionColor} paddingTop={0} paddingBottom={0}>\n      <Grid>\n        <Row noMargin>\n          <Cell colsXl={12} colsLg={12} colsMd={8} colsSm={8} colsXs={4}>\n            <CallToActionPanel\n              image={image}\n              withLQIP={withLQIP}\n              showReadMore={showReadMore}\n              showMore={showMore}\n              showFeatured={showFeatured}\n              element={element}\n              richTextCopy={richTextCopy}\n              alignment={rightOrientation ? orientation.right : orientation.left}\n            />\n            {children}\n          </Cell>\n        </Row>\n      </Grid>\n    </CustomSection>\n  )\n}\n"],"file":"CallToActionPanel.js"}