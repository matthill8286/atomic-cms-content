{"version":3,"sources":["../../../src/pages/EventDetailsPage/EventContent.tsx"],"names":["React","CustomSection","FocusedSection","StaticPlaylist","FOCUSED_SECTION","EventsWithAssetMeta","memo","slices","dataTestId","sectionColor","overridePlaylistClickEvent","routeContext","map","index","pageComponents","description","staticAssetTile","rightOrientation","staticPlaylists","profileSections","learningAssetMeta","richTextSection","heading","subHeading","id","name","__typename","size","keyProp","title","document","length","playlistName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,cAAvB,EAAuCC,cAAvC;AAEA,OAAO,IAAMC,eAAe,GAAG,gBAAxB;AAEP,OAAO,IAAMC,mBAAmB,GAAGL,KAAK,CAACM,IAAN,CACjC,gBAMM;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,0BAEI,QAFJA,0BAEI;AAAA,MADJC,YACI,QADJA,YACI;AACJ,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEF;AAAtB,KACGF,MADH,aACGA,MADH,uBACGA,MAAM,CAAEK,GAAR,CACC,iBAkBEC,KAlBF,EAmBK;AAAA,qCAjBDC,cAiBC;AAAA,QAhBCC,WAgBD,wBAhBCA,WAgBD;AAAA,QAfCC,eAeD,wBAfCA,eAeD;AAAA,QAdCC,gBAcD,wBAdCA,gBAcD;AAAA,QAbCC,eAaD,wBAbCA,eAaD;AAAA,QAZCC,eAYD,wBAZCA,eAYD;AAAA,QAXCC,iBAWD,wBAXCA,iBAWD;AAAA,QAVCC,eAUD,wBAVCA,eAUD;AAAA,QATCC,OASD,wBATCA,OASD;AAAA,QARCC,UAQD,wBARCA,UAQD;AAAA,QAPCC,EAOD,wBAPCA,EAOD;AAAA,QANCC,IAMD,wBANCA,IAMD;AAAA,QALCC,UAKD,wBALCA,UAKD;AAAA,QAHDC,IAGC,SAHDA,IAGC;AACH,QAAMC,OAAO,aAAMF,UAAN,cAAoBb,KAApB,cAA6BW,EAA7B,CAAb;;AACA,YAAQE,UAAR;AACE,WAAK,kBAAL;AACE,eACE,oBAAC,cAAD;AACE,UAAA,GAAG,EAAEE,OADP;AAEE,UAAA,KAAK,EAAEP,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEQ,KAF1B;AAGE,UAAA,WAAW,EAAER,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAES,QAHhC;AAIE,UAAA,mBAAmB,EAAEP,UAJvB;AAKE,UAAA,YAAY,EAAED,OALhB;AAME,UAAA,iBAAiB,EAAEF,iBANrB;AAOE,UAAA,eAAe,EAAED,eAPnB;AAQE,UAAA,YAAY,EAAC,OARf;AASE,UAAA,UAAU,EAAC,IATb;AAUE,UAAA,aAAa,EAAC;AAVhB,UADF;;AAcF,WAAK,uBAAL;AACE,YAAI,CAACD,eAAe,CAACa,MAArB,EAA6B;AAC3B,iBAAO,IAAP;AACD;;AAED,eACE,oBAAC,cAAD;AACE,UAAA,GAAG,EAAEH,OADP;AAEE,UAAA,UAAU,EAAEJ,EAFd;AAGE,UAAA,QAAQ,EAAEhB,UAHZ;AAIE,UAAA,eAAe,EAAEU,eAJnB;AAKE,UAAA,IAAI,EAAEA,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAG,CAAH,CAAf,CAAqBc,YAL7B;AAME,UAAA,0BAA0B,EAAEtB,0BAN9B;AAOE,UAAA,YAAY,EAAEC,YAPhB;AAQE,UAAA,KAAK,EAAEc,IART;AASE,UAAA,kBAAkB,EAAEhB,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkB,OATtC;AAUE,UAAA,OAAO,EAAC,gBAVV;AAWE,UAAA,QAAQ,MAXV;AAYE,UAAA,OAAO,EAAEkB,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU,CAZnB;AAaE,UAAA,UAAU,EAAC,MAbb;AAcE,UAAA,WAAW;AAdb,UADF;;AAkBF;AACE,eAAO,IAAP;AAxCJ;AA0CD,GAhEF,CADH,CADF;AAsED,CA9EgC,CAA5B","sourcesContent":["import React from 'react';\nimport {CustomSection, FocusedSection, StaticPlaylist} from '../../components';\n\nexport const FOCUSED_SECTION = 'FocusedSection';\n\nexport const EventsWithAssetMeta = React.memo<any>(\n  ({\n    slices,\n    dataTestId,\n    sectionColor,\n    overridePlaylistClickEvent,\n    routeContext,\n  }) => {\n    return (\n      <CustomSection color={sectionColor}>\n        {slices?.map(\n          (\n            {\n              pageComponents: {\n                description,\n                staticAssetTile,\n                rightOrientation,\n                staticPlaylists,\n                profileSections,\n                learningAssetMeta,\n                richTextSection,\n                heading,\n                subHeading,\n                id,\n                name,\n                __typename,\n              },\n              size,\n            },\n            index: number\n          ) => {\n            const keyProp = `${__typename}_${index}|${id}`;\n            switch (__typename) {\n              case 'EventFocusedArea':\n                return (\n                  <FocusedSection\n                    key={keyProp}\n                    title={richTextSection?.title}\n                    description={richTextSection?.document}\n                    profileBrandedLabel={subHeading}\n                    profileTitle={heading}\n                    learningAssetMeta={learningAssetMeta}\n                    profileSections={profileSections}\n                    sectionColor=\"grey1\"\n                    paddingTop=\"sm\"\n                    paddingBottom=\"sm\"\n                  />\n                );\n              case 'StaticPlaylistSection':\n                if (!staticPlaylists.length) {\n                  return null;\n                }\n\n                return (\n                  <StaticPlaylist\n                    key={keyProp}\n                    playlistId={id}\n                    dataTest={dataTestId}\n                    staticPlaylists={staticPlaylists}\n                    name={staticPlaylists?.[0].playlistName}\n                    overridePlaylistClickEvent={overridePlaylistClickEvent}\n                    routeContext={routeContext}\n                    title={name}\n                    playlistBackground={sectionColor ?? 'grey1'}\n                    context=\"StaticPlaylist\"\n                    showLock\n                    desktop={size ?? 4}\n                    paddingTop=\"xxxl\"\n                    showDivider\n                  />\n                );\n              default:\n                return null;\n            }\n          }\n        )}\n      </CustomSection>\n    );\n  }\n);\n"],"file":"EventContent.js"}