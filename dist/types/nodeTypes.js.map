{"version":3,"sources":["../../src/types/nodeTypes.ts"],"names":[],"mappings":"AAwFA","sourcesContent":["import {Block, Inline, Text, TopLevelBlock} from './types';\nimport BLOCKS from './blocks';\nimport INLINES from './inlines';\ndeclare type EmptyNodeData = {};\nexport interface Heading1 extends Block {\n  type: BLOCKS.HEADING_1;\n  children: Array<Inline | Text>;\n}\nexport interface Heading2 extends Block {\n  type: BLOCKS.HEADING_2;\n  children: Array<Inline | Text>;\n}\nexport interface Heading3 extends Block {\n  type: BLOCKS.HEADING_3;\n  children: Array<Inline | Text>;\n}\nexport interface Heading4 extends Block {\n  type: BLOCKS.HEADING_4;\n  children: Array<Inline | Text>;\n}\nexport interface Heading5 extends Block {\n  type: BLOCKS.HEADING_5;\n  children: Array<Inline | Text>;\n}\nexport interface Heading6 extends Block {\n  type: BLOCKS.HEADING_6;\n  children: Array<Inline | Text>;\n}\nexport interface Paragraph extends Block {\n  type: BLOCKS.PARAGRAPH;\n  children: Array<Inline | Text>;\n}\nexport interface Quote extends Block {\n  type: BLOCKS.QUOTE;\n  children: Paragraph[];\n}\nexport interface Hr extends Block {\n  type: BLOCKS.HR;\n  /**\n   *\n   * @maxItems 0\n   */\n  children: Array<Inline | Text>;\n}\nexport interface OrderedList extends Block {\n  type: BLOCKS.OL_LIST;\n  children: ListItem[];\n}\nexport interface UnorderedList extends Block {\n  type: BLOCKS.UL_LIST;\n  children: ListItem[];\n}\nexport interface ListItem extends Block {\n  type: BLOCKS.LIST_ITEM;\n  children: TopLevelBlock[];\n}\nexport interface Link<T extends string = string> {\n  type: 'link';\n  linkType?: T;\n  id: string;\n}\n\nexport interface AssetLinkBlock extends Block {\n  type: BLOCKS.EMBEDDED_ASSET;\n  target: Link<'Asset'>;\n  /**\n   *\n   * @maxItems 0\n   */\n  children: Array<Inline | Text>;\n}\nexport interface MediaLinkBlock extends Block {\n  type: BLOCKS.EMBEDDED_MEDIA;\n  target: Link<'Media'>;\n  /**\n   *\n   * @maxItems 0\n   */\n  children: Array<Inline | Text>;\n}\nexport interface Hyperlink extends Inline {\n  type: INLINES.HYPERLINK;\n  data: {\n    uri: string;\n  };\n  children: Text[];\n}\n\nexport {};\n"],"file":"nodeTypes.js"}