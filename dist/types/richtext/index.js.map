{"version":3,"sources":["../../../src/types/richtext/index.tsx"],"names":["React","nodeToReactComponent","BLOCKS","MARKS","defaultNodeRenderers","PARAGRAPH","node","children","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","UL_LIST","OL_LIST","LIST_ITEM","QUOTE","HR","defaultModifierRenderers","BOLD","text","ITALIC","UNDERLINE","CODE","defaultInlineUpdated","type","key","documentToReactComponents","richTextDocument","options","renderNode","renderModifier","renderText"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,oBAAT,QAAqC,6BAArC;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,UAA9B;AAEA,cAAc,qBAAd;AAEA,IAAMC,oBAAgC,uEACnCF,MAAM,CAACG,SAD4B,EAChB,UAACC,IAAD,EAAOC,QAAP;AAAA,SAAoB,+BAAIA,QAAJ,CAApB;AAAA,CADgB,0CAEnCL,MAAM,CAACM,SAF4B,EAEhB,UAACF,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CAFgB,0CAGnCL,MAAM,CAACO,SAH4B,EAGhB,UAACH,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CAHgB,0CAInCL,MAAM,CAACQ,SAJ4B,EAIhB,UAACJ,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CAJgB,0CAKnCL,MAAM,CAACS,SAL4B,EAKhB,UAACL,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CALgB,0CAMnCL,MAAM,CAACU,SAN4B,EAMhB,UAACN,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CANgB,0CAOnCL,MAAM,CAACW,SAP4B,EAOhB,UAACP,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CAPgB,0CAQnCL,MAAM,CAACY,OAR4B,EAQlB,UAACR,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CARkB,0CASnCL,MAAM,CAACa,OAT4B,EASlB,UAACT,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CATkB,0CAUnCL,MAAM,CAACc,SAV4B,EAUhB,UAACV,IAAD,EAAOC,QAAP;AAAA,SAAoB,gCAAKA,QAAL,CAApB;AAAA,CAVgB,0CAWnCL,MAAM,CAACe,KAX4B,EAWpB,UAACX,IAAD,EAAOC,QAAP;AAAA,SAAoB,wCAAaA,QAAb,CAApB;AAAA,CAXoB,0CAYnCL,MAAM,CAACgB,EAZ4B,EAYvB;AAAA,SAAM,+BAAN;AAAA,CAZuB,yBAAtC;AAeA,IAAMC,wBAAwC,uEAC3ChB,KAAK,CAACiB,IADqC,EAC9B,UAAAC,IAAI;AAAA,SAAI,+BAAIA,IAAJ,CAAJ;AAAA,CAD0B,0CAE3ClB,KAAK,CAACmB,MAFqC,EAE5B,UAAAD,IAAI;AAAA,SAAI,+BAAIA,IAAJ,CAAJ;AAAA,CAFwB,0CAG3ClB,KAAK,CAACoB,SAHqC,EAGzB,UAAAF,IAAI;AAAA,SAAI,+BAAIA,IAAJ,CAAJ;AAAA,CAHqB,0CAI3ClB,KAAK,CAACqB,IAJqC,EAI9B,UAAAH,IAAI;AAAA,SAAI,kCAAOA,IAAP,CAAJ;AAAA,CAJ0B,yBAA9C;AAOA,OAAO,SAASI,oBAAT,CACLC,IADK,EAELpB,IAFK,EAGM;AACX,SAAO;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACqB;AAAhB,KAAsBrB,IAAI,CAACoB,IAA3B,CAAP;AACD;AAsCD,OAAO,SAASE,yBAAT,CACLC,gBADK,EAGM;AAAA,MADXC,OACW,uEADQ,EACR;;AACX,MAAI,CAACD,gBAAL,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,SAAO5B,oBAAoB,CAAC4B,gBAAD,EAAmB;AAC5CE,IAAAA,UAAU,kCACL3B,oBADK,GAEL0B,OAAO,CAACC,UAFH,CADkC;AAK5CC,IAAAA,cAAc,kCACTb,wBADS,GAETW,OAAO,CAACE,cAFC,CAL8B;AAS5CC,IAAAA,UAAU,EAAEH,OAAO,CAACG;AATwB,GAAnB,CAA3B;AAWD","sourcesContent":["import React, { ReactNode } from 'react'\nimport { nodeToReactComponent } from './nodeListToReactComponents'\nimport { RichTextBlock, RichTextSpan } from './graphcms-richtext'\nimport { BLOCKS, MARKS } from '../index'\n\nexport * from './graphcms-richtext'\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.PARAGRAPH]: (node, children) => <p>{children}</p>,\n  [BLOCKS.HEADING_1]: (node, children) => <h1>{children}</h1>,\n  [BLOCKS.HEADING_2]: (node, children) => <h2>{children}</h2>,\n  [BLOCKS.HEADING_3]: (node, children) => <h3>{children}</h3>,\n  [BLOCKS.HEADING_4]: (node, children) => <h4>{children}</h4>,\n  [BLOCKS.HEADING_5]: (node, children) => <h5>{children}</h5>,\n  [BLOCKS.HEADING_6]: (node, children) => <h6>{children}</h6>,\n  [BLOCKS.UL_LIST]: (node, children) => <ul>{children}</ul>,\n  [BLOCKS.OL_LIST]: (node, children) => <ol>{children}</ol>,\n  [BLOCKS.LIST_ITEM]: (node, children) => <li>{children}</li>,\n  [BLOCKS.QUOTE]: (node, children) => <blockquote>{children}</blockquote>,\n  [BLOCKS.HR]: () => <hr />,\n}\n\nconst defaultModifierRenderers: RenderModifier = {\n  [MARKS.BOLD]: text => <b>{text}</b>,\n  [MARKS.ITALIC]: text => <i>{text}</i>,\n  [MARKS.UNDERLINE]: text => <u>{text}</u>,\n  [MARKS.CODE]: text => <code>{text}</code>,\n}\n\nexport function defaultInlineUpdated(\n  type: string,\n  node: { key: string | number | undefined; type: React.ReactNode }\n): ReactNode {\n  return <span key={node.key}>{node.type}</span>\n}\n\nexport type CommonNode = Text | RichTextBlock | RichTextSpan\n\nexport interface NodeRenderer {\n  (node: any, children: ReactNode): ReactNode\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer\n}\n\nexport interface RenderModifier {\n  [k: string]: (text: ReactNode) => ReactNode\n}\n\nexport interface RenderText {\n  (text: string): ReactNode\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode\n  /**\n   * Modifier renderers\n   */\n  renderModifier?: RenderModifier\n  /**\n   * Text renderer\n   */\n  renderText?: RenderText\n}\n\n/**\n * Serialize a GraphCms Rich Text `document` to React tree\n */\nexport function documentToReactComponents(\n  richTextDocument: CommonNode,\n  options: Options = {}\n): ReactNode {\n  if (!richTextDocument) {\n    return null\n  }\n\n  return nodeToReactComponent(richTextDocument, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderModifier: {\n      ...defaultModifierRenderers,\n      ...options.renderModifier,\n    },\n    renderText: options.renderText,\n  })\n}\n"],"file":"index.js"}