{"version":3,"sources":["../../../src/types/richtext/index.tsx"],"names":["React","nodeToReactComponent","INLINES","MARKS","BLOCKS","defaultNodeRenderers","PARAGRAPH","node","children","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","UL_LIST","OL_LIST","LIST_ITEM","QUOTE","HR","EMBEDDED_ENTRY","defaultInlineUpdated","defaultModifierRenderers","BOLD","text","ITALIC","UNDERLINE","CODE","type","key","documentToReactComponents","richTextDocument","options","renderNode","renderModifier","renderText"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport {nodeToReactComponent} from './nodeListToReactComponents';\nimport {Block, Inline, INLINES, MARKS, BLOCKS, Text} from '../index';\nimport {RichTextBlock, RichTextSpan} from './graphcms-richtext';\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.PARAGRAPH]: (node, children) => <p>{children}</p>,\n  [BLOCKS.HEADING_1]: (node, children) => <h1>{children}</h1>,\n  [BLOCKS.HEADING_2]: (node, children) => <h2>{children}</h2>,\n  [BLOCKS.HEADING_3]: (node, children) => <h3>{children}</h3>,\n  [BLOCKS.HEADING_4]: (node, children) => <h4>{children}</h4>,\n  [BLOCKS.HEADING_5]: (node, children) => <h5>{children}</h5>,\n  [BLOCKS.HEADING_6]: (node, children) => <h6>{children}</h6>,\n  [BLOCKS.UL_LIST]: (node, children) => <ul>{children}</ul>,\n  [BLOCKS.OL_LIST]: (node, children) => <ol>{children}</ol>,\n  [BLOCKS.LIST_ITEM]: (node, children) => <li>{children}</li>,\n  [BLOCKS.QUOTE]: (node, children) => <blockquote>{children}</blockquote>,\n  [BLOCKS.HR]: () => <hr />,\n  [INLINES.EMBEDDED_ENTRY]: node =>\n    defaultInlineUpdated(INLINES.EMBEDDED_ENTRY, node as Inline),\n};\n\nconst defaultModifierRenderers: RenderModifier = {\n  [MARKS.BOLD]: text => <b>{text}</b>,\n  [MARKS.ITALIC]: text => <i>{text}</i>,\n  [MARKS.UNDERLINE]: text => <u>{text}</u>,\n  [MARKS.CODE]: text => <code>{text}</code>,\n};\n\nexport function defaultInlineUpdated(type: string, node): ReactNode {\n  return <span key={node.key}>{node.type}</span>;\n}\n\nexport type CommonNode = Text | Block | Inline | RichTextBlock | RichTextSpan;\n\nexport interface NodeRenderer {\n  (node: Block | Inline, children: ReactNode): ReactNode;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderModifier {\n  [k: string]: (text: ReactNode) => ReactNode;\n}\n\nexport interface RenderText {\n  (text: string): ReactNode;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Modifier renderers\n   */\n  renderModifier?: RenderModifier;\n  /**\n   * Text renderer\n   */\n  renderText?: RenderText;\n}\n\n/**\n * Serialize a GraphCms Rich Text `document` to React tree\n */\nexport function documentToReactComponents(\n  richTextDocument: CommonNode,\n  options: Options = {}\n): ReactNode {\n  if (!richTextDocument) {\n    return null;\n  }\n\n  return nodeToReactComponent(richTextDocument, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderModifier: {\n      ...defaultModifierRenderers,\n      ...options.renderModifier,\n    },\n    renderText: options.renderText,\n  });\n}\n"],"file":"index.js"}