{"version":3,"sources":["../../../src/types/richtext/nodeListToReactComponents.tsx"],"names":["React","appendKeyToValidElement","hasValue","nodeListToReactComponents","nodes","options","map","node","index","nodeToReactComponent","renderNode","renderModifier","renderText","text","children","type"],"mappings":"AAAA,OAAOA,KAAP,MAA+B,OAA/B;AACA,SAAQC,uBAAR;AACA,SAAQC,QAAR;AAIA,OAAO,SAASC,yBAAT,CACLC,KADK,EAELC,OAFK,EAGM;AACX,SAAOD,KAAK,CAACE,GAAN,CACL,UAACC,IAAD,EAAmBC,KAAnB,EAAgD;AAC9C,WAAOP,uBAAuB,CAC5BQ,oBAAoB,CAACF,IAAD,EAAOF,OAAP,CADQ,EAE5BG,KAF4B,CAA9B;AAID,GANI,CAAP;AAQD;AAED,OAAO,SAASC,oBAAT,CACLF,IADK,EAELF,OAFK,EAGM;AACX,MAAOK,UAAP,GAAiDL,OAAjD,CAAOK,UAAP;AAAA,MAAmBC,cAAnB,GAAiDN,OAAjD,CAAmBM,cAAnB;AAAA,MAAmCC,UAAnC,GAAiDP,OAAjD,CAAmCO,UAAnC;;AACA,MAAIV,QAAQ,CAACK,IAAD,CAAZ,EAAoB;AAElB,WAAOK,UAAU,GAAGA,UAAU,CAACL,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,IAAP,CAAb,GAA4BN,IAAI,CAACM,IAAlD;AACD,GAHD,MAGO;AACL,QAAMC,QAAmB,GAAGX,yBAAyB,CAEnDI,IAAI,CAACO,QAF8C,EAGnDT,OAHmD,CAArD;;AAOA,QAAI,CAACE,IAAI,CAACQ,IAAN,IAAc,CAACL,UAAU,CAACH,IAAI,CAACQ,IAAN,CAA7B,EAA0C;AACxC,aAAO,0CAAGD,QAAH,CAAP;AACD;;AAGD,WAAOJ,UAAU,CAACH,IAAI,CAACQ,IAAN,CAAV,CAAsBR,IAAtB,EAA4BO,QAA5B,CAAP;AACD;AACF","sourcesContent":["import React, {ReactNode} from 'react';\nimport {appendKeyToValidElement} from './appendKeyToValidElement';\nimport {hasValue} from './helpers';\nimport {CommonNode, Options} from './index';\nimport {RichTextBlock} from './graphcms-richtext';\n\nexport function nodeListToReactComponents(\n  nodes: CommonNode[],\n  options: Options\n): ReactNode {\n  return nodes.map(\n    (node: CommonNode, index: number): ReactNode => {\n      return appendKeyToValidElement(\n        nodeToReactComponent(node, options),\n        index\n      );\n    }\n  );\n}\n\nexport function nodeToReactComponent(\n  node: RichTextBlock | CommonNode,\n  options: Options\n): ReactNode {\n  const {renderNode, renderModifier, renderText} = options;\n  if (hasValue(node)) {\n    // @ts-ignore\n    return renderText ? renderText(node?.text) : node.text;\n  } else {\n    const children: ReactNode = nodeListToReactComponents(\n      // @ts-ignore\n      node.children,\n      options\n    );\n\n    // @ts-ignore\n    if (!node.type || !renderNode[node.type]) {\n      return <>{children}</>;\n    }\n\n    // @ts-ignore\n    return renderNode[node.type](node, children);\n  }\n}\n"],"file":"nodeListToReactComponents.js"}