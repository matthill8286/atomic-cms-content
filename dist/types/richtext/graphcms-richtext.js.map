{"version":3,"sources":["../../../src/types/richtext/graphcms-richtext.ts"],"names":["Elements"],"mappings":"AAGA,WAAYA,QAAZ;;WAAYA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;AAAAA,EAAAA,Q;GAAAA,Q,KAAAA,Q","sourcesContent":["/* eslint-disable camelcase */\nimport * as React from 'react';\n\nexport enum Elements {\n  heading1 = 'heading-one',\n  heading2 = 'heading-two',\n  heading3 = 'heading-three',\n  heading4 = 'heading-four',\n  heading5 = 'heading-five',\n  heading6 = 'heading-six',\n  paragraph = 'paragraph',\n  preformatted = 'preformatted',\n  strong = 'strong',\n  em = 'em',\n  listItem = 'list-item',\n  listItemChild = 'list-item-child',\n  list = 'bulleted-list',\n  oList = 'numbered-list',\n  image = 'image',\n  embed = 'iframe',\n  hyperlink = 'link',\n  label = 'label',\n  span = 'span',\n}\n\nexport type Link = {\n  link_type?: 'link';\n  url?: string;\n  target?: string;\n  id?: string;\n  uid?: string;\n  isBroken?: boolean;\n  lang?: string;\n  slug?: string;\n  tags?: string[];\n  type?: string;\n  height?: string;\n  kind?: string;\n  name?: string;\n  size?: string;\n  width?: string;\n};\n\nexport type Raw = {\n  raw: RichTextBlock;\n};\n\nexport type Document = {\n  document?: Raw;\n  message?: Raw;\n};\n\nexport type NodeChild = {\n  text?: string;\n  bold?: boolean;\n  italic?: boolean;\n  id?: string;\n  rel?: string;\n  href?: string;\n  src?: string;\n  type?: string;\n  title?: string;\n  width?: number;\n  height?: number;\n  handle?: string;\n  mimeType?: string;\n  className?: string;\n  openInNewTab?: boolean;\n  children?: RichTextBlock[] | RichTextSpan[];\n};\n\nexport type RichTextSpan = {\n  type?: Elements.strong | Elements.hyperlink | Elements.em | Elements.label;\n  children?: NodeChild[];\n};\n\nexport type RichTextBlock = {\n  type: Elements | string;\n  children?: NodeChild[];\n};\n\nexport type HTMLSerializer<T> = (\n  type: Elements,\n  element: any,\n  text: string,\n  children: T[],\n  key: string\n) => T | null;\n\nexport interface RichTextProps {\n  Component?: React.ReactNode;\n  elements?: {};\n  htmlSerializer?: HTMLSerializer<React.ReactNode>;\n  linkResolver?: LinkResolver;\n  render?: RichTextBlock[];\n  renderAsText?: any;\n  serializeHyperlink?: HTMLSerializer<React.ReactNode>;\n}\n\nexport type LinkResolver = (doc: any) => string;\n\ninterface LinkProps {\n  url(link: any, linkResolver?: LinkResolver): string;\n}\n"],"file":"graphcms-richtext.js"}