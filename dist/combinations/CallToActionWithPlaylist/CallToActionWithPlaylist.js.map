{"version":3,"sources":["../../../src/combinations/CallToActionWithPlaylist/CallToActionWithPlaylist.tsx"],"names":["React","useModals","MODALS","CmsCallToActionPanel","CustomSection","StaticPlaylist","ConfigurableGraphCmsHtmlSerializer","Serializer","ConfirmationModalWrapper","LoginModalWrapper","CallToActionWithPlaylist","memo","slices","dataTestId","sectionColor","overridePlaylistClickEvent","routeContext","modalLocked","modalBlock","openModal","openModalName","map","index","pageComponents","button","heading","image","staticAssetTile","rightOrientation","staticPlaylists","id","name","__typename","richTextCopy","size","showScrollbar","keyProp","buttonLabel","text","headline","href","route","to","raw","textAlign","contentAlign","length","playlistName","CONFIRMATION","LOGIN"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR;AACA,SAAQC,MAAR;AACA,SACEC,oBADF,EAEEC,aAFF,EAGEC,cAHF;AAMA,SACEC,kCADF,EAEEC,UAFF,QAGO,8BAHP;AAIA,SAAQC,wBAAR,QAAuC,uDAAvC;AACA,SAAQC,iBAAR,QAAgC,gDAAhC;AAEA,OAAO,IAAMC,wBAAwB,GAAGV,KAAK,CAACW,IAAN,CACtC,gBAQM;AAAA,MAPJC,MAOI,QAPJA,MAOI;AAAA,MANJC,UAMI,QANJA,UAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,0BAII,QAJJA,0BAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,UACI,QADJA,UACI;;AAAA,mBAC+BjB,SAAS,EADxC;AAAA,MACGkB,SADH,cACGA,SADH;AAAA,MACcC,aADd,cACcA,aADd;;AAGJ,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEN,YAAtB;AAAoC,IAAA,UAAU,EAAE,CAAhD;AAAmD,IAAA,aAAa,EAAE;AAAlE,KACGF,MADH,aACGA,MADH,uBACGA,MAAM,CAAES,GAAR,CACC,iBAiBEC,KAjBF,EAkBK;AAAA,qCAhBDC,cAgBC;AAAA,QAfCC,MAeD,wBAfCA,MAeD;AAAA,QAdCC,OAcD,wBAdCA,OAcD;AAAA,QAbCC,KAaD,wBAbCA,KAaD;AAAA,QAZCC,eAYD,wBAZCA,eAYD;AAAA,QAXCC,gBAWD,wBAXCA,gBAWD;AAAA,QAVCC,eAUD,wBAVCA,eAUD;AAAA,QATCC,EASD,wBATCA,EASD;AAAA,QARCC,IAQD,wBARCA,IAQD;AAAA,QAPCC,UAOD,wBAPCA,UAOD;AAAA,QANCC,YAMD,wBANCA,YAMD;AAAA,QAJDC,IAIC,SAJDA,IAIC;AAAA,QAHDC,aAGC,SAHDA,aAGC;AACH,QAAMC,OAAO,aAAMJ,UAAN,cAAoBV,KAApB,CAAb;;AACA,YAAQU,UAAR;AACE,WAAK,mBAAL;AACE,eACE,oBAAC,oBAAD;AACE,UAAA,GAAG,EAAEI,OADP;AAEE,UAAA,YAAY,EAAC,OAFf;AAGE,UAAA,OAAO,EAAE;AACPC,YAAAA,WAAW,EAAEb,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEc,IADd;AAEPC,YAAAA,QAAQ,EAAEd,OAFH;AAGPe,YAAAA,IAAI,EAAEhB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEgB,IAHP;AAIPC,YAAAA,KAAK,EAAEjB,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEkB;AAJR,WAHX;AASE,UAAA,YAAY,EAAEnC,UAAU,CACtB0B,YADsB,aACtBA,YADsB,uBACtBA,YAAY,CAAEU,GADQ,EAEtBrC,kCAAkC,CAAC;AACjCsC,YAAAA,SAAS,EAAE,MADsB;AAEjCC,YAAAA,YAAY,EAAE;AAFmB,WAAD,CAFZ,CAT1B;AAgBE,UAAA,YAAY,EAAE,KAhBhB;AAiBE,UAAA,YAAY,MAjBd;AAkBE,UAAA,WAAW,MAlBb;AAmBE,UAAA,KAAK,EAAElB,eAnBT;AAoBE,UAAA,YAAY,EAAEX,YApBhB;AAqBE,UAAA,gBAAgB,EAAEY,gBArBpB;AAsBE,UAAA,KAAK,EAAEF;AAtBT,UADF;;AA0BF,WAAK,uBAAL;AACE,YAAI,CAACG,eAAe,CAACiB,MAArB,EAA6B;AAC3B,iBAAO,IAAP;AACD;;AAED,eACE,oBAAC,cAAD;AACE,UAAA,GAAG,EAAEV,OADP;AAEE,UAAA,UAAU,EAAEN,EAFd;AAGE,UAAA,QAAQ,EAAEjB,UAHZ;AAIE,UAAA,eAAe,EAAEgB,eAJnB;AAKE,UAAA,IAAI,EAAEA,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAG,CAAH,CAAf,CAAqBkB,YAL7B;AAME,UAAA,0BAA0B,EAAEhC,0BAN9B;AAOE,UAAA,YAAY,EAAEC,YAPhB;AAQE,UAAA,KAAK,EAAEe,IART;AASE,UAAA,aAAa,EAAEI,aATjB;AAUE,UAAA,WAAW,EAAElB,WAVf;AAWE,UAAA,UAAU,EAAEC,UAXd;AAYE,UAAA,kBAAkB,EAAEJ,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkB,OAZtC;AAaE,UAAA,OAAO,EAAC,gBAbV;AAcE,UAAA,QAAQ,MAdV;AAeE,UAAA,OAAO,EAAEoB,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU,CAfnB;AAgBE,UAAA,UAAU,EAAC,MAhBb;AAiBE,UAAA,SAAS,EAAEf;AAjBb,UADF;;AAqBF;AACE,eAAO,IAAP;AAvDJ;AAyDD,GA9EF,CADH,EAiFGC,aAAa,KAAKlB,MAAM,CAAC8C,YAAzB,IACC,oBAAC,wBAAD;AAA0B,IAAA,UAAU,EAAE9B;AAAtC,IAlFJ,EAoFGE,aAAa,KAAKlB,MAAM,CAAC+C,KAAzB,IACC,oBAAC,iBAAD;AAAmB,IAAA,WAAW,EAAEhC;AAAhC,IArFJ,CADF;AA0FD,CAtGqC,CAAjC","sourcesContent":["import React from 'react';\nimport {useModals} from '@/app/asset/hooks';\nimport {MODALS} from '@/constants';\nimport {\n  CmsCallToActionPanel,\n  CustomSection,\n  StaticPlaylist,\n} from '../../components';\nimport {CallToActionPlaylistProps} from '#/src/staticPages/combinations';\nimport {\n  ConfigurableGraphCmsHtmlSerializer,\n  Serializer,\n} from '#/src/staticPages/components';\nimport {ConfirmationModalWrapper} from '#/src/staticPages/components/Modals/ConfirmationModal';\nimport {LoginModalWrapper} from '#/src/staticPages/components/Modals/LoginModal';\n\nexport const CallToActionWithPlaylist = React.memo<CallToActionPlaylistProps>(\n  ({\n    slices,\n    dataTestId,\n    sectionColor,\n    overridePlaylistClickEvent,\n    routeContext,\n    modalLocked,\n    modalBlock,\n  }) => {\n    const {openModal, openModalName} = useModals();\n\n    return (\n      <CustomSection color={sectionColor} paddingTop={0} paddingBottom={0}>\n        {slices?.map(\n          (\n            {\n              pageComponents: {\n                button,\n                heading,\n                image,\n                staticAssetTile,\n                rightOrientation,\n                staticPlaylists,\n                id,\n                name,\n                __typename,\n                richTextCopy,\n              },\n              size,\n              showScrollbar,\n            },\n            index: number\n          ) => {\n            const keyProp = `${__typename}_${index}`;\n            switch (__typename) {\n              case 'CallToActionPanel':\n                return (\n                  <CmsCallToActionPanel\n                    key={keyProp}\n                    sectionColor=\"white\"\n                    element={{\n                      buttonLabel: button?.text,\n                      headline: heading,\n                      href: button?.href,\n                      route: button?.to,\n                    }}\n                    richTextCopy={Serializer(\n                      richTextCopy?.raw,\n                      ConfigurableGraphCmsHtmlSerializer({\n                        textAlign: 'left',\n                        contentAlign: 'left',\n                      })\n                    )}\n                    showReadMore={false}\n                    showFeatured\n                    isOpenAsset\n                    asset={staticAssetTile}\n                    routeContext={routeContext}\n                    rightOrientation={rightOrientation}\n                    image={image}\n                  />\n                );\n              case 'StaticPlaylistSection':\n                if (!staticPlaylists.length) {\n                  return null;\n                }\n\n                return (\n                  <StaticPlaylist\n                    key={keyProp}\n                    playlistId={id}\n                    dataTest={dataTestId}\n                    staticPlaylists={staticPlaylists}\n                    name={staticPlaylists?.[0].playlistName}\n                    overridePlaylistClickEvent={overridePlaylistClickEvent}\n                    routeContext={routeContext}\n                    title={name}\n                    showScrollbar={showScrollbar}\n                    modalLocked={modalLocked}\n                    modalBlock={modalBlock}\n                    playlistBackground={sectionColor ?? 'grey1'}\n                    context=\"StaticPlaylist\"\n                    showLock\n                    desktop={size ?? 4}\n                    paddingTop=\"xxxl\"\n                    openModal={openModal}\n                  />\n                );\n              default:\n                return null;\n            }\n          }\n        )}\n        {openModalName === MODALS.CONFIRMATION && (\n          <ConfirmationModalWrapper modalBlock={modalBlock} />\n        )}\n        {openModalName === MODALS.LOGIN && (\n          <LoginModalWrapper modalLocked={modalLocked} />\n        )}\n      </CustomSection>\n    );\n  }\n);\n"],"file":"CallToActionWithPlaylist.js"}